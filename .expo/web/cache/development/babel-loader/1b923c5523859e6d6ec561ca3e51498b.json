{"ast":null,"code":"'use strict';\n\nvar Preprocessor = require(\"./preprocessor\"),\n    locationInfoMixin = require(\"../location_info/tokenizer_mixin\"),\n    UNICODE = require(\"../common/unicode\"),\n    neTree = require(\"./named_entity_data\");\n\nvar $ = UNICODE.CODE_POINTS,\n    $$ = UNICODE.CODE_POINT_SEQUENCES;\nvar NUMERIC_ENTITY_REPLACEMENTS = {\n  0x00: 0xFFFD,\n  0x0D: 0x000D,\n  0x80: 0x20AC,\n  0x81: 0x0081,\n  0x82: 0x201A,\n  0x83: 0x0192,\n  0x84: 0x201E,\n  0x85: 0x2026,\n  0x86: 0x2020,\n  0x87: 0x2021,\n  0x88: 0x02C6,\n  0x89: 0x2030,\n  0x8A: 0x0160,\n  0x8B: 0x2039,\n  0x8C: 0x0152,\n  0x8D: 0x008D,\n  0x8E: 0x017D,\n  0x8F: 0x008F,\n  0x90: 0x0090,\n  0x91: 0x2018,\n  0x92: 0x2019,\n  0x93: 0x201C,\n  0x94: 0x201D,\n  0x95: 0x2022,\n  0x96: 0x2013,\n  0x97: 0x2014,\n  0x98: 0x02DC,\n  0x99: 0x2122,\n  0x9A: 0x0161,\n  0x9B: 0x203A,\n  0x9C: 0x0153,\n  0x9D: 0x009D,\n  0x9E: 0x017E,\n  0x9F: 0x0178\n};\nvar HAS_DATA_FLAG = 1 << 0;\nvar DATA_DUPLET_FLAG = 1 << 1;\nvar HAS_BRANCHES_FLAG = 1 << 2;\nvar MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG;\nvar DATA_STATE = 'DATA_STATE',\n    CHARACTER_REFERENCE_IN_DATA_STATE = 'CHARACTER_REFERENCE_IN_DATA_STATE',\n    RCDATA_STATE = 'RCDATA_STATE',\n    CHARACTER_REFERENCE_IN_RCDATA_STATE = 'CHARACTER_REFERENCE_IN_RCDATA_STATE',\n    RAWTEXT_STATE = 'RAWTEXT_STATE',\n    SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE',\n    PLAINTEXT_STATE = 'PLAINTEXT_STATE',\n    TAG_OPEN_STATE = 'TAG_OPEN_STATE',\n    END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE',\n    TAG_NAME_STATE = 'TAG_NAME_STATE',\n    RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE',\n    RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE',\n    RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE',\n    RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE',\n    RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE',\n    RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE',\n    SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE',\n    SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE',\n    SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE',\n    SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE',\n    SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE',\n    SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE',\n    BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE',\n    ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE',\n    AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE',\n    BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE',\n    ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE',\n    ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE',\n    ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE',\n    CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE = 'CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE',\n    AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE',\n    SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE',\n    BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE',\n    BOGUS_COMMENT_STATE_CONTINUATION = 'BOGUS_COMMENT_STATE_CONTINUATION',\n    MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE',\n    COMMENT_START_STATE = 'COMMENT_START_STATE',\n    COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE',\n    COMMENT_STATE = 'COMMENT_STATE',\n    COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE',\n    COMMENT_END_STATE = 'COMMENT_END_STATE',\n    COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE',\n    DOCTYPE_STATE = 'DOCTYPE_STATE',\n    DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE',\n    AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE',\n    BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE',\n    DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE',\n    DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE',\n    BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE',\n    BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\n    DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE',\n    DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE',\n    AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\n    BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE',\n    CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';\n\nfunction isWhitespace(cp) {\n  return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\n\nfunction isAsciiDigit(cp) {\n  return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\n\nfunction isAsciiUpper(cp) {\n  return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\n\nfunction isAsciiLower(cp) {\n  return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\n\nfunction isAsciiLetter(cp) {\n  return isAsciiLower(cp) || isAsciiUpper(cp);\n}\n\nfunction isAsciiAlphaNumeric(cp) {\n  return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\n\nfunction isDigit(cp, isHex) {\n  return isAsciiDigit(cp) || isHex && (cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F || cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F);\n}\n\nfunction isReservedCodePoint(cp) {\n  return cp >= 0xD800 && cp <= 0xDFFF || cp > 0x10FFFF;\n}\n\nfunction toAsciiLowerCodePoint(cp) {\n  return cp + 0x0020;\n}\n\nfunction toChar(cp) {\n  if (cp <= 0xFFFF) return String.fromCharCode(cp);\n  cp -= 0x10000;\n  return String.fromCharCode(cp >>> 10 & 0x3FF | 0xD800) + String.fromCharCode(0xDC00 | cp & 0x3FF);\n}\n\nfunction toAsciiLowerChar(cp) {\n  return String.fromCharCode(toAsciiLowerCodePoint(cp));\n}\n\nfunction findNamedEntityTreeBranch(nodeIx, cp) {\n  var branchCount = neTree[++nodeIx],\n      lo = ++nodeIx,\n      hi = lo + branchCount - 1;\n\n  while (lo <= hi) {\n    var mid = lo + hi >>> 1,\n        midCp = neTree[mid];\n    if (midCp < cp) lo = mid + 1;else if (midCp > cp) hi = mid - 1;else return neTree[mid + branchCount];\n  }\n\n  return -1;\n}\n\nvar Tokenizer = module.exports = function (options) {\n  this.preprocessor = new Preprocessor();\n  this.tokenQueue = [];\n  this.allowCDATA = false;\n  this.state = DATA_STATE;\n  this.returnState = '';\n  this.tempBuff = [];\n  this.additionalAllowedCp = void 0;\n  this.lastStartTagName = '';\n  this.consumedAfterSnapshot = -1;\n  this.active = false;\n  this.currentCharacterToken = null;\n  this.currentToken = null;\n  this.currentAttr = null;\n  if (options && options.locationInfo) locationInfoMixin.assign(this);\n};\n\nTokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';\nTokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';\nTokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';\nTokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';\nTokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';\nTokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';\nTokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';\nTokenizer.EOF_TOKEN = 'EOF_TOKEN';\nTokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN';\nTokenizer.MODE = Tokenizer.prototype.MODE = {\n  DATA: DATA_STATE,\n  RCDATA: RCDATA_STATE,\n  RAWTEXT: RAWTEXT_STATE,\n  SCRIPT_DATA: SCRIPT_DATA_STATE,\n  PLAINTEXT: PLAINTEXT_STATE\n};\n\nTokenizer.getTokenAttr = function (token, attrName) {\n  for (var i = token.attrs.length - 1; i >= 0; i--) {\n    if (token.attrs[i].name === attrName) return token.attrs[i].value;\n  }\n\n  return null;\n};\n\nTokenizer.prototype.getNextToken = function () {\n  while (!this.tokenQueue.length && this.active) {\n    this._hibernationSnapshot();\n\n    var cp = this._consume();\n\n    if (!this._ensureHibernation()) this[this.state](cp);\n  }\n\n  return this.tokenQueue.shift();\n};\n\nTokenizer.prototype.write = function (chunk, isLastChunk) {\n  this.active = true;\n  this.preprocessor.write(chunk, isLastChunk);\n};\n\nTokenizer.prototype.insertHtmlAtCurrentPos = function (chunk) {\n  this.active = true;\n  this.preprocessor.insertHtmlAtCurrentPos(chunk);\n};\n\nTokenizer.prototype._hibernationSnapshot = function () {\n  this.consumedAfterSnapshot = 0;\n};\n\nTokenizer.prototype._ensureHibernation = function () {\n  if (this.preprocessor.endOfChunkHit) {\n    for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--) {\n      this.preprocessor.retreat();\n    }\n\n    this.active = false;\n    this.tokenQueue.push({\n      type: Tokenizer.HIBERNATION_TOKEN\n    });\n    return true;\n  }\n\n  return false;\n};\n\nTokenizer.prototype._consume = function () {\n  this.consumedAfterSnapshot++;\n  return this.preprocessor.advance();\n};\n\nTokenizer.prototype._unconsume = function () {\n  this.consumedAfterSnapshot--;\n  this.preprocessor.retreat();\n};\n\nTokenizer.prototype._unconsumeSeveral = function (count) {\n  while (count--) {\n    this._unconsume();\n  }\n};\n\nTokenizer.prototype._reconsumeInState = function (state) {\n  this.state = state;\n\n  this._unconsume();\n};\n\nTokenizer.prototype._consumeSubsequentIfMatch = function (pattern, startCp, caseSensitive) {\n  var consumedCount = 0,\n      isMatch = true,\n      patternLength = pattern.length,\n      patternPos = 0,\n      cp = startCp,\n      patternCp = void 0;\n\n  for (; patternPos < patternLength; patternPos++) {\n    if (patternPos > 0) {\n      cp = this._consume();\n      consumedCount++;\n    }\n\n    if (cp === $.EOF) {\n      isMatch = false;\n      break;\n    }\n\n    patternCp = pattern[patternPos];\n\n    if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {\n      isMatch = false;\n      break;\n    }\n  }\n\n  if (!isMatch) this._unconsumeSeveral(consumedCount);\n  return isMatch;\n};\n\nTokenizer.prototype._lookahead = function () {\n  var cp = this._consume();\n\n  this._unconsume();\n\n  return cp;\n};\n\nTokenizer.prototype.isTempBufferEqualToScriptString = function () {\n  if (this.tempBuff.length !== $$.SCRIPT_STRING.length) return false;\n\n  for (var i = 0; i < this.tempBuff.length; i++) {\n    if (this.tempBuff[i] !== $$.SCRIPT_STRING[i]) return false;\n  }\n\n  return true;\n};\n\nTokenizer.prototype._createStartTagToken = function () {\n  this.currentToken = {\n    type: Tokenizer.START_TAG_TOKEN,\n    tagName: '',\n    selfClosing: false,\n    attrs: []\n  };\n};\n\nTokenizer.prototype._createEndTagToken = function () {\n  this.currentToken = {\n    type: Tokenizer.END_TAG_TOKEN,\n    tagName: '',\n    attrs: []\n  };\n};\n\nTokenizer.prototype._createCommentToken = function () {\n  this.currentToken = {\n    type: Tokenizer.COMMENT_TOKEN,\n    data: ''\n  };\n};\n\nTokenizer.prototype._createDoctypeToken = function (initialName) {\n  this.currentToken = {\n    type: Tokenizer.DOCTYPE_TOKEN,\n    name: initialName,\n    forceQuirks: false,\n    publicId: null,\n    systemId: null\n  };\n};\n\nTokenizer.prototype._createCharacterToken = function (type, ch) {\n  this.currentCharacterToken = {\n    type: type,\n    chars: ch\n  };\n};\n\nTokenizer.prototype._createAttr = function (attrNameFirstCh) {\n  this.currentAttr = {\n    name: attrNameFirstCh,\n    value: ''\n  };\n};\n\nTokenizer.prototype._isDuplicateAttr = function () {\n  return Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) !== null;\n};\n\nTokenizer.prototype._leaveAttrName = function (toState) {\n  this.state = toState;\n  if (!this._isDuplicateAttr()) this.currentToken.attrs.push(this.currentAttr);\n};\n\nTokenizer.prototype._leaveAttrValue = function (toState) {\n  this.state = toState;\n};\n\nTokenizer.prototype._isAppropriateEndTagToken = function () {\n  return this.lastStartTagName === this.currentToken.tagName;\n};\n\nTokenizer.prototype._emitCurrentToken = function () {\n  this._emitCurrentCharacterToken();\n\n  if (this.currentToken.type === Tokenizer.START_TAG_TOKEN) this.lastStartTagName = this.currentToken.tagName;\n  this.tokenQueue.push(this.currentToken);\n  this.currentToken = null;\n};\n\nTokenizer.prototype._emitCurrentCharacterToken = function () {\n  if (this.currentCharacterToken) {\n    this.tokenQueue.push(this.currentCharacterToken);\n    this.currentCharacterToken = null;\n  }\n};\n\nTokenizer.prototype._emitEOFToken = function () {\n  this._emitCurrentCharacterToken();\n\n  this.tokenQueue.push({\n    type: Tokenizer.EOF_TOKEN\n  });\n};\n\nTokenizer.prototype._appendCharToCurrentCharacterToken = function (type, ch) {\n  if (this.currentCharacterToken && this.currentCharacterToken.type !== type) this._emitCurrentCharacterToken();\n  if (this.currentCharacterToken) this.currentCharacterToken.chars += ch;else this._createCharacterToken(type, ch);\n};\n\nTokenizer.prototype._emitCodePoint = function (cp) {\n  var type = Tokenizer.CHARACTER_TOKEN;\n  if (isWhitespace(cp)) type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;else if (cp === $.NULL) type = Tokenizer.NULL_CHARACTER_TOKEN;\n\n  this._appendCharToCurrentCharacterToken(type, toChar(cp));\n};\n\nTokenizer.prototype._emitSeveralCodePoints = function (codePoints) {\n  for (var i = 0; i < codePoints.length; i++) {\n    this._emitCodePoint(codePoints[i]);\n  }\n};\n\nTokenizer.prototype._emitChar = function (ch) {\n  this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);\n};\n\nTokenizer.prototype._consumeNumericEntity = function (isHex) {\n  var digits = '',\n      nextCp = void 0;\n\n  do {\n    digits += toChar(this._consume());\n    nextCp = this._lookahead();\n  } while (nextCp !== $.EOF && isDigit(nextCp, isHex));\n\n  if (this._lookahead() === $.SEMICOLON) this._consume();\n  var referencedCp = parseInt(digits, isHex ? 16 : 10),\n      replacement = NUMERIC_ENTITY_REPLACEMENTS[referencedCp];\n  if (replacement) return replacement;\n  if (isReservedCodePoint(referencedCp)) return $.REPLACEMENT_CHARACTER;\n  return referencedCp;\n};\n\nTokenizer.prototype._consumeNamedEntity = function (inAttr) {\n  var referencedCodePoints = null,\n      referenceSize = 0,\n      cp = null,\n      consumedCount = 0,\n      semicolonTerminated = false;\n\n  for (var i = 0; i > -1;) {\n    var current = neTree[i],\n        inNode = current < MAX_BRANCH_MARKER_VALUE,\n        nodeWithData = inNode && current & HAS_DATA_FLAG;\n\n    if (nodeWithData) {\n      referencedCodePoints = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];\n      referenceSize = consumedCount;\n\n      if (cp === $.SEMICOLON) {\n        semicolonTerminated = true;\n        break;\n      }\n    }\n\n    cp = this._consume();\n    consumedCount++;\n    if (cp === $.EOF) break;\n    if (inNode) i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;else i = cp === current ? ++i : -1;\n  }\n\n  if (referencedCodePoints) {\n    if (!semicolonTerminated) {\n      this._unconsumeSeveral(consumedCount - referenceSize);\n\n      if (inAttr) {\n        var nextCp = this._lookahead();\n\n        if (nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp)) {\n          this._unconsumeSeveral(referenceSize);\n\n          return null;\n        }\n      }\n    }\n\n    return referencedCodePoints;\n  }\n\n  this._unconsumeSeveral(consumedCount);\n\n  return null;\n};\n\nTokenizer.prototype._consumeCharacterReference = function (startCp, inAttr) {\n  if (isWhitespace(startCp) || startCp === $.GREATER_THAN_SIGN || startCp === $.AMPERSAND || startCp === this.additionalAllowedCp || startCp === $.EOF) {\n    this._unconsume();\n\n    return null;\n  }\n\n  if (startCp === $.NUMBER_SIGN) {\n    var isHex = false,\n        nextCp = this._lookahead();\n\n    if (nextCp === $.LATIN_SMALL_X || nextCp === $.LATIN_CAPITAL_X) {\n      this._consume();\n\n      isHex = true;\n    }\n\n    nextCp = this._lookahead();\n    if (nextCp !== $.EOF && isDigit(nextCp, isHex)) return [this._consumeNumericEntity(isHex)];\n\n    this._unconsumeSeveral(isHex ? 2 : 1);\n\n    return null;\n  }\n\n  this._unconsume();\n\n  return this._consumeNamedEntity(inAttr);\n};\n\nvar _ = Tokenizer.prototype;\n\n_[DATA_STATE] = function dataState(cp) {\n  this.preprocessor.dropParsedChunk();\n  if (cp === $.AMPERSAND) this.state = CHARACTER_REFERENCE_IN_DATA_STATE;else if (cp === $.LESS_THAN_SIGN) this.state = TAG_OPEN_STATE;else if (cp === $.NULL) this._emitCodePoint(cp);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n};\n\n_[CHARACTER_REFERENCE_IN_DATA_STATE] = function characterReferenceInDataState(cp) {\n  this.additionalAllowedCp = void 0;\n\n  var referencedCodePoints = this._consumeCharacterReference(cp, false);\n\n  if (!this._ensureHibernation()) {\n    if (referencedCodePoints) this._emitSeveralCodePoints(referencedCodePoints);else this._emitChar('&');\n    this.state = DATA_STATE;\n  }\n};\n\n_[RCDATA_STATE] = function rcdataState(cp) {\n  this.preprocessor.dropParsedChunk();\n  if (cp === $.AMPERSAND) this.state = CHARACTER_REFERENCE_IN_RCDATA_STATE;else if (cp === $.LESS_THAN_SIGN) this.state = RCDATA_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n};\n\n_[CHARACTER_REFERENCE_IN_RCDATA_STATE] = function characterReferenceInRcdataState(cp) {\n  this.additionalAllowedCp = void 0;\n\n  var referencedCodePoints = this._consumeCharacterReference(cp, false);\n\n  if (!this._ensureHibernation()) {\n    if (referencedCodePoints) this._emitSeveralCodePoints(referencedCodePoints);else this._emitChar('&');\n    this.state = RCDATA_STATE;\n  }\n};\n\n_[RAWTEXT_STATE] = function rawtextState(cp) {\n  this.preprocessor.dropParsedChunk();\n  if (cp === $.LESS_THAN_SIGN) this.state = RAWTEXT_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n};\n\n_[SCRIPT_DATA_STATE] = function scriptDataState(cp) {\n  this.preprocessor.dropParsedChunk();\n  if (cp === $.LESS_THAN_SIGN) this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n};\n\n_[PLAINTEXT_STATE] = function plaintextState(cp) {\n  this.preprocessor.dropParsedChunk();\n  if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n};\n\n_[TAG_OPEN_STATE] = function tagOpenState(cp) {\n  if (cp === $.EXCLAMATION_MARK) this.state = MARKUP_DECLARATION_OPEN_STATE;else if (cp === $.SOLIDUS) this.state = END_TAG_OPEN_STATE;else if (isAsciiLetter(cp)) {\n    this._createStartTagToken();\n\n    this._reconsumeInState(TAG_NAME_STATE);\n  } else if (cp === $.QUESTION_MARK) this._reconsumeInState(BOGUS_COMMENT_STATE);else {\n    this._emitChar('<');\n\n    this._reconsumeInState(DATA_STATE);\n  }\n};\n\n_[END_TAG_OPEN_STATE] = function endTagOpenState(cp) {\n  if (isAsciiLetter(cp)) {\n    this._createEndTagToken();\n\n    this._reconsumeInState(TAG_NAME_STATE);\n  } else if (cp === $.GREATER_THAN_SIGN) this.state = DATA_STATE;else if (cp === $.EOF) {\n    this._reconsumeInState(DATA_STATE);\n\n    this._emitChar('<');\n\n    this._emitChar('/');\n  } else this._reconsumeInState(BOGUS_COMMENT_STATE);\n};\n\n_[TAG_NAME_STATE] = function tagNameState(cp) {\n  if (isWhitespace(cp)) this.state = BEFORE_ATTRIBUTE_NAME_STATE;else if (cp === $.SOLIDUS) this.state = SELF_CLOSING_START_TAG_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (isAsciiUpper(cp)) this.currentToken.tagName += toAsciiLowerChar(cp);else if (cp === $.NULL) this.currentToken.tagName += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentToken.tagName += toChar(cp);\n};\n\n_[RCDATA_LESS_THAN_SIGN_STATE] = function rcdataLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = RCDATA_END_TAG_OPEN_STATE;\n  } else {\n    this._emitChar('<');\n\n    this._reconsumeInState(RCDATA_STATE);\n  }\n};\n\n_[RCDATA_END_TAG_OPEN_STATE] = function rcdataEndTagOpenState(cp) {\n  if (isAsciiLetter(cp)) {\n    this._createEndTagToken();\n\n    this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);\n  } else {\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._reconsumeInState(RCDATA_STATE);\n  }\n};\n\n_[RCDATA_END_TAG_NAME_STATE] = function rcdataEndTagNameState(cp) {\n  if (isAsciiUpper(cp)) {\n    this.currentToken.tagName += toAsciiLowerChar(cp);\n    this.tempBuff.push(cp);\n  } else if (isAsciiLower(cp)) {\n    this.currentToken.tagName += toChar(cp);\n    this.tempBuff.push(cp);\n  } else {\n    if (this._isAppropriateEndTagToken()) {\n      if (isWhitespace(cp)) {\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        return;\n      }\n\n      if (cp === $.SOLIDUS) {\n        this.state = SELF_CLOSING_START_TAG_STATE;\n        return;\n      }\n\n      if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n\n        this._emitCurrentToken();\n\n        return;\n      }\n    }\n\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._emitSeveralCodePoints(this.tempBuff);\n\n    this._reconsumeInState(RCDATA_STATE);\n  }\n};\n\n_[RAWTEXT_LESS_THAN_SIGN_STATE] = function rawtextLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = RAWTEXT_END_TAG_OPEN_STATE;\n  } else {\n    this._emitChar('<');\n\n    this._reconsumeInState(RAWTEXT_STATE);\n  }\n};\n\n_[RAWTEXT_END_TAG_OPEN_STATE] = function rawtextEndTagOpenState(cp) {\n  if (isAsciiLetter(cp)) {\n    this._createEndTagToken();\n\n    this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);\n  } else {\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._reconsumeInState(RAWTEXT_STATE);\n  }\n};\n\n_[RAWTEXT_END_TAG_NAME_STATE] = function rawtextEndTagNameState(cp) {\n  if (isAsciiUpper(cp)) {\n    this.currentToken.tagName += toAsciiLowerChar(cp);\n    this.tempBuff.push(cp);\n  } else if (isAsciiLower(cp)) {\n    this.currentToken.tagName += toChar(cp);\n    this.tempBuff.push(cp);\n  } else {\n    if (this._isAppropriateEndTagToken()) {\n      if (isWhitespace(cp)) {\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        return;\n      }\n\n      if (cp === $.SOLIDUS) {\n        this.state = SELF_CLOSING_START_TAG_STATE;\n        return;\n      }\n\n      if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n\n        this.state = DATA_STATE;\n        return;\n      }\n    }\n\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._emitSeveralCodePoints(this.tempBuff);\n\n    this._reconsumeInState(RAWTEXT_STATE);\n  }\n};\n\n_[SCRIPT_DATA_LESS_THAN_SIGN_STATE] = function scriptDataLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;\n  } else if (cp === $.EXCLAMATION_MARK) {\n    this.state = SCRIPT_DATA_ESCAPE_START_STATE;\n\n    this._emitChar('<');\n\n    this._emitChar('!');\n  } else {\n    this._emitChar('<');\n\n    this._reconsumeInState(SCRIPT_DATA_STATE);\n  }\n};\n\n_[SCRIPT_DATA_END_TAG_OPEN_STATE] = function scriptDataEndTagOpenState(cp) {\n  if (isAsciiLetter(cp)) {\n    this._createEndTagToken();\n\n    this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);\n  } else {\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._reconsumeInState(SCRIPT_DATA_STATE);\n  }\n};\n\n_[SCRIPT_DATA_END_TAG_NAME_STATE] = function scriptDataEndTagNameState(cp) {\n  if (isAsciiUpper(cp)) {\n    this.currentToken.tagName += toAsciiLowerChar(cp);\n    this.tempBuff.push(cp);\n  } else if (isAsciiLower(cp)) {\n    this.currentToken.tagName += toChar(cp);\n    this.tempBuff.push(cp);\n  } else {\n    if (this._isAppropriateEndTagToken()) {\n      if (isWhitespace(cp)) {\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        return;\n      } else if (cp === $.SOLIDUS) {\n        this.state = SELF_CLOSING_START_TAG_STATE;\n        return;\n      } else if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n\n        this.state = DATA_STATE;\n        return;\n      }\n    }\n\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._emitSeveralCodePoints(this.tempBuff);\n\n    this._reconsumeInState(SCRIPT_DATA_STATE);\n  }\n};\n\n_[SCRIPT_DATA_ESCAPE_START_STATE] = function scriptDataEscapeStartState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;\n\n    this._emitChar('-');\n  } else this._reconsumeInState(SCRIPT_DATA_STATE);\n};\n\n_[SCRIPT_DATA_ESCAPE_START_DASH_STATE] = function scriptDataEscapeStartDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n\n    this._emitChar('-');\n  } else this._reconsumeInState(SCRIPT_DATA_STATE);\n};\n\n_[SCRIPT_DATA_ESCAPED_STATE] = function scriptDataEscapedState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;\n\n    this._emitChar('-');\n  } else if (cp === $.LESS_THAN_SIGN) this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this._emitCodePoint(cp);\n};\n\n_[SCRIPT_DATA_ESCAPED_DASH_STATE] = function scriptDataEscapedDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n\n    this._emitChar('-');\n  } else if (cp === $.LESS_THAN_SIGN) this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) {\n    this.state = SCRIPT_DATA_ESCAPED_STATE;\n\n    this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.state = SCRIPT_DATA_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  }\n};\n\n_[SCRIPT_DATA_ESCAPED_DASH_DASH_STATE] = function scriptDataEscapedDashDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) this._emitChar('-');else if (cp === $.LESS_THAN_SIGN) this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = SCRIPT_DATA_STATE;\n\n    this._emitChar('>');\n  } else if (cp === $.NULL) {\n    this.state = SCRIPT_DATA_ESCAPED_STATE;\n\n    this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.state = SCRIPT_DATA_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  }\n};\n\n_[SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataEscapedLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;\n  } else if (isAsciiLetter(cp)) {\n    this.tempBuff = [];\n\n    this._emitChar('<');\n\n    this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);\n  } else {\n    this._emitChar('<');\n\n    this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n  }\n};\n\n_[SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE] = function scriptDataEscapedEndTagOpenState(cp) {\n  if (isAsciiLetter(cp)) {\n    this._createEndTagToken();\n\n    this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);\n  } else {\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n  }\n};\n\n_[SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE] = function scriptDataEscapedEndTagNameState(cp) {\n  if (isAsciiUpper(cp)) {\n    this.currentToken.tagName += toAsciiLowerChar(cp);\n    this.tempBuff.push(cp);\n  } else if (isAsciiLower(cp)) {\n    this.currentToken.tagName += toChar(cp);\n    this.tempBuff.push(cp);\n  } else {\n    if (this._isAppropriateEndTagToken()) {\n      if (isWhitespace(cp)) {\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        return;\n      }\n\n      if (cp === $.SOLIDUS) {\n        this.state = SELF_CLOSING_START_TAG_STATE;\n        return;\n      }\n\n      if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n\n        this.state = DATA_STATE;\n        return;\n      }\n    }\n\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._emitSeveralCodePoints(this.tempBuff);\n\n    this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n  }\n};\n\n_[SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE] = function scriptDataDoubleEscapeStartState(cp) {\n  if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n    this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE : SCRIPT_DATA_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  } else if (isAsciiUpper(cp)) {\n    this.tempBuff.push(toAsciiLowerCodePoint(cp));\n\n    this._emitCodePoint(cp);\n  } else if (isAsciiLower(cp)) {\n    this.tempBuff.push(cp);\n\n    this._emitCodePoint(cp);\n  } else this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n};\n\n_[SCRIPT_DATA_DOUBLE_ESCAPED_STATE] = function scriptDataDoubleEscapedState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;\n\n    this._emitChar('-');\n  } else if (cp === $.LESS_THAN_SIGN) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    this._emitChar('<');\n  } else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this._emitCodePoint(cp);\n};\n\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE] = function scriptDataDoubleEscapedDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;\n\n    this._emitChar('-');\n  } else if (cp === $.LESS_THAN_SIGN) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    this._emitChar('<');\n  } else if (cp === $.NULL) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n    this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  }\n};\n\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE] = function scriptDataDoubleEscapedDashDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) this._emitChar('-');else if (cp === $.LESS_THAN_SIGN) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    this._emitChar('<');\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = SCRIPT_DATA_STATE;\n\n    this._emitChar('>');\n  } else if (cp === $.NULL) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n    this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  }\n};\n\n_[SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataDoubleEscapedLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;\n\n    this._emitChar('/');\n  } else this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n};\n\n_[SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE] = function scriptDataDoubleEscapeEndState(cp) {\n  if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n    this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_ESCAPED_STATE : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  } else if (isAsciiUpper(cp)) {\n    this.tempBuff.push(toAsciiLowerCodePoint(cp));\n\n    this._emitCodePoint(cp);\n  } else if (isAsciiLower(cp)) {\n    this.tempBuff.push(cp);\n\n    this._emitCodePoint(cp);\n  } else this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n};\n\n_[BEFORE_ATTRIBUTE_NAME_STATE] = function beforeAttributeNameState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);else if (cp === $.EQUALS_SIGN) {\n    this._createAttr('=');\n\n    this.state = ATTRIBUTE_NAME_STATE;\n  } else {\n    this._createAttr('');\n\n    this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n  }\n};\n\n_[ATTRIBUTE_NAME_STATE] = function attributeNameState(cp) {\n  if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n    this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);\n\n    this._unconsume();\n  } else if (cp === $.EQUALS_SIGN) this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);else if (isAsciiUpper(cp)) this.currentAttr.name += toAsciiLowerChar(cp);else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN) this.currentAttr.name += toChar(cp);else if (cp === $.NULL) this.currentAttr.name += UNICODE.REPLACEMENT_CHARACTER;else this.currentAttr.name += toChar(cp);\n};\n\n_[AFTER_ATTRIBUTE_NAME_STATE] = function afterAttributeNameState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.SOLIDUS) this.state = SELF_CLOSING_START_TAG_STATE;else if (cp === $.EQUALS_SIGN) this.state = BEFORE_ATTRIBUTE_VALUE_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this._createAttr('');\n\n    this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n  }\n};\n\n_[BEFORE_ATTRIBUTE_VALUE_STATE] = function beforeAttributeValueState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.QUOTATION_MARK) this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;else if (cp === $.APOSTROPHE) this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;else this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);\n};\n\n_[ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE] = function attributeValueDoubleQuotedState(cp) {\n  if (cp === $.QUOTATION_MARK) this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;else if (cp === $.AMPERSAND) {\n    this.additionalAllowedCp = $.QUOTATION_MARK;\n    this.returnState = this.state;\n    this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n  } else if (cp === $.NULL) this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentAttr.value += toChar(cp);\n};\n\n_[ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE] = function attributeValueSingleQuotedState(cp) {\n  if (cp === $.APOSTROPHE) this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;else if (cp === $.AMPERSAND) {\n    this.additionalAllowedCp = $.APOSTROPHE;\n    this.returnState = this.state;\n    this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n  } else if (cp === $.NULL) this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentAttr.value += toChar(cp);\n};\n\n_[ATTRIBUTE_VALUE_UNQUOTED_STATE] = function attributeValueUnquotedState(cp) {\n  if (isWhitespace(cp)) this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);else if (cp === $.AMPERSAND) {\n    this.additionalAllowedCp = $.GREATER_THAN_SIGN;\n    this.returnState = this.state;\n    this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this._leaveAttrValue(DATA_STATE);\n\n    this._emitCurrentToken();\n  } else if (cp === $.NULL) this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN || cp === $.EQUALS_SIGN || cp === $.GRAVE_ACCENT) this.currentAttr.value += toChar(cp);else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentAttr.value += toChar(cp);\n};\n\n_[CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE] = function characterReferenceInAttributeValueState(cp) {\n  var referencedCodePoints = this._consumeCharacterReference(cp, true);\n\n  if (!this._ensureHibernation()) {\n    if (referencedCodePoints) {\n      for (var i = 0; i < referencedCodePoints.length; i++) {\n        this.currentAttr.value += toChar(referencedCodePoints[i]);\n      }\n    } else this.currentAttr.value += '&';\n\n    this.state = this.returnState;\n  }\n};\n\n_[AFTER_ATTRIBUTE_VALUE_QUOTED_STATE] = function afterAttributeValueQuotedState(cp) {\n  if (isWhitespace(cp)) this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);else if (cp === $.SOLIDUS) this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);else if (cp === $.GREATER_THAN_SIGN) {\n    this._leaveAttrValue(DATA_STATE);\n\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n};\n\n_[SELF_CLOSING_START_TAG_STATE] = function selfClosingStartTagState(cp) {\n  if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.selfClosing = true;\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n};\n\n_[BOGUS_COMMENT_STATE] = function bogusCommentState() {\n  this._createCommentToken();\n\n  this._reconsumeInState(BOGUS_COMMENT_STATE_CONTINUATION);\n};\n\n_[BOGUS_COMMENT_STATE_CONTINUATION] = function bogusCommentStateContinuation(cp) {\n  while (true) {\n    if (cp === $.GREATER_THAN_SIGN) {\n      this.state = DATA_STATE;\n      break;\n    } else if (cp === $.EOF) {\n      this._reconsumeInState(DATA_STATE);\n\n      break;\n    } else {\n      this.currentToken.data += cp === $.NULL ? UNICODE.REPLACEMENT_CHARACTER : toChar(cp);\n\n      this._hibernationSnapshot();\n\n      cp = this._consume();\n      if (this._ensureHibernation()) return;\n    }\n  }\n\n  this._emitCurrentToken();\n};\n\n_[MARKUP_DECLARATION_OPEN_STATE] = function markupDeclarationOpenState(cp) {\n  var dashDashMatch = this._consumeSubsequentIfMatch($$.DASH_DASH_STRING, cp, true),\n      doctypeMatch = !dashDashMatch && this._consumeSubsequentIfMatch($$.DOCTYPE_STRING, cp, false),\n      cdataMatch = !dashDashMatch && !doctypeMatch && this.allowCDATA && this._consumeSubsequentIfMatch($$.CDATA_START_STRING, cp, true);\n\n  if (!this._ensureHibernation()) {\n    if (dashDashMatch) {\n      this._createCommentToken();\n\n      this.state = COMMENT_START_STATE;\n    } else if (doctypeMatch) this.state = DOCTYPE_STATE;else if (cdataMatch) this.state = CDATA_SECTION_STATE;else this._reconsumeInState(BOGUS_COMMENT_STATE);\n  }\n};\n\n_[COMMENT_START_STATE] = function commentStartState(cp) {\n  if (cp === $.HYPHEN_MINUS) this.state = COMMENT_START_DASH_STATE;else if (cp === $.NULL) {\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n};\n\n_[COMMENT_START_DASH_STATE] = function commentStartDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) this.state = COMMENT_END_STATE;else if (cp === $.NULL) {\n    this.currentToken.data += '-';\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.data += '-';\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n};\n\n_[COMMENT_STATE] = function commentState(cp) {\n  if (cp === $.HYPHEN_MINUS) this.state = COMMENT_END_DASH_STATE;else if (cp === $.NULL) this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.data += toChar(cp);\n};\n\n_[COMMENT_END_DASH_STATE] = function commentEndDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) this.state = COMMENT_END_STATE;else if (cp === $.NULL) {\n    this.currentToken.data += '-';\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.data += '-';\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n};\n\n_[COMMENT_END_STATE] = function commentEndState(cp) {\n  if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.EXCLAMATION_MARK) this.state = COMMENT_END_BANG_STATE;else if (cp === $.HYPHEN_MINUS) this.currentToken.data += '-';else if (cp === $.NULL) {\n    this.currentToken.data += '--';\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.EOF) {\n    this._reconsumeInState(DATA_STATE);\n\n    this._emitCurrentToken();\n  } else {\n    this.currentToken.data += '--';\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n};\n\n_[COMMENT_END_BANG_STATE] = function commentEndBangState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.currentToken.data += '--!';\n    this.state = COMMENT_END_DASH_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.NULL) {\n    this.currentToken.data += '--!';\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.data += '--!';\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n};\n\n_[DOCTYPE_STATE] = function doctypeState(cp) {\n  if (isWhitespace(cp)) return;else if (cp === $.GREATER_THAN_SIGN) {\n    this._createDoctypeToken(null);\n\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this._createDoctypeToken(null);\n\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this._createDoctypeToken('');\n\n    this._reconsumeInState(DOCTYPE_NAME_STATE);\n  }\n};\n\n_[DOCTYPE_NAME_STATE] = function doctypeNameState(cp) {\n  if (isWhitespace(cp) || cp === $.GREATER_THAN_SIGN || cp === $.EOF) this._reconsumeInState(AFTER_DOCTYPE_NAME_STATE);else if (isAsciiUpper(cp)) this.currentToken.name += toAsciiLowerChar(cp);else if (cp === $.NULL) this.currentToken.name += UNICODE.REPLACEMENT_CHARACTER;else this.currentToken.name += toChar(cp);\n};\n\n_[AFTER_DOCTYPE_NAME_STATE] = function afterDoctypeNameState(cp) {\n  if (isWhitespace(cp)) return;\n\n  if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else {\n    var publicMatch = this._consumeSubsequentIfMatch($$.PUBLIC_STRING, cp, false),\n        systemMatch = !publicMatch && this._consumeSubsequentIfMatch($$.SYSTEM_STRING, cp, false);\n\n    if (!this._ensureHibernation()) {\n      if (publicMatch) this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;else if (systemMatch) this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;else {\n        this.currentToken.forceQuirks = true;\n        this.state = BOGUS_DOCTYPE_STATE;\n      }\n    }\n  }\n};\n\n_[BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE] = function beforeDoctypePublicIdentifierState(cp) {\n  if (isWhitespace(cp)) return;\n\n  if (cp === $.QUOTATION_MARK) {\n    this.currentToken.publicId = '';\n    this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n  } else if (cp === $.APOSTROPHE) {\n    this.currentToken.publicId = '';\n    this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n  } else {\n    this.currentToken.forceQuirks = true;\n\n    this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n  }\n};\n\n_[DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypePublicIdentifierDoubleQuotedState(cp) {\n  if (cp === $.QUOTATION_MARK) this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;else if (cp === $.NULL) this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.publicId += toChar(cp);\n};\n\n_[DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypePublicIdentifierSingleQuotedState(cp) {\n  if (cp === $.APOSTROPHE) this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;else if (cp === $.NULL) this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.publicId += toChar(cp);\n};\n\n_[BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE] = function betweenDoctypePublicAndSystemIdentifiersState(cp) {\n  if (isWhitespace(cp)) return;\n\n  if (cp === $.GREATER_THAN_SIGN) {\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.QUOTATION_MARK) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n  } else if (cp === $.APOSTROPHE) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n  } else {\n    this.currentToken.forceQuirks = true;\n\n    this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n  }\n};\n\n_[BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function beforeDoctypeSystemIdentifierState(cp) {\n  if (isWhitespace(cp)) return;\n\n  if (cp === $.QUOTATION_MARK) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n  } else if (cp === $.APOSTROPHE) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n  } else {\n    this.currentToken.forceQuirks = true;\n\n    this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n  }\n};\n\n_[DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypeSystemIdentifierDoubleQuotedState(cp) {\n  if (cp === $.QUOTATION_MARK) this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.NULL) this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.systemId += toChar(cp);\n};\n\n_[DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypeSystemIdentifierSingleQuotedState(cp) {\n  if (cp === $.APOSTROPHE) this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.NULL) this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.systemId += toChar(cp);\n};\n\n_[AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function afterDoctypeSystemIdentifierState(cp) {\n  if (isWhitespace(cp)) return;\n\n  if (cp === $.GREATER_THAN_SIGN) {\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.state = BOGUS_DOCTYPE_STATE;\n};\n\n_[BOGUS_DOCTYPE_STATE] = function bogusDoctypeState(cp) {\n  if (cp === $.GREATER_THAN_SIGN) {\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  }\n};\n\n_[CDATA_SECTION_STATE] = function cdataSectionState(cp) {\n  while (true) {\n    if (cp === $.EOF) {\n      this._reconsumeInState(DATA_STATE);\n\n      break;\n    } else {\n      var cdataEndMatch = this._consumeSubsequentIfMatch($$.CDATA_END_STRING, cp, true);\n\n      if (this._ensureHibernation()) break;\n\n      if (cdataEndMatch) {\n        this.state = DATA_STATE;\n        break;\n      }\n\n      this._emitCodePoint(cp);\n\n      this._hibernationSnapshot();\n\n      cp = this._consume();\n      if (this._ensureHibernation()) break;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/adarsh/Documents/StocksUI/node_modules/react-native-parse-html/lib/tokenizer/index.js"],"names":["Preprocessor","require","locationInfoMixin","UNICODE","neTree","$","CODE_POINTS","$$","CODE_POINT_SEQUENCES","NUMERIC_ENTITY_REPLACEMENTS","HAS_DATA_FLAG","DATA_DUPLET_FLAG","HAS_BRANCHES_FLAG","MAX_BRANCH_MARKER_VALUE","DATA_STATE","CHARACTER_REFERENCE_IN_DATA_STATE","RCDATA_STATE","CHARACTER_REFERENCE_IN_RCDATA_STATE","RAWTEXT_STATE","SCRIPT_DATA_STATE","PLAINTEXT_STATE","TAG_OPEN_STATE","END_TAG_OPEN_STATE","TAG_NAME_STATE","RCDATA_LESS_THAN_SIGN_STATE","RCDATA_END_TAG_OPEN_STATE","RCDATA_END_TAG_NAME_STATE","RAWTEXT_LESS_THAN_SIGN_STATE","RAWTEXT_END_TAG_OPEN_STATE","RAWTEXT_END_TAG_NAME_STATE","SCRIPT_DATA_LESS_THAN_SIGN_STATE","SCRIPT_DATA_END_TAG_OPEN_STATE","SCRIPT_DATA_END_TAG_NAME_STATE","SCRIPT_DATA_ESCAPE_START_STATE","SCRIPT_DATA_ESCAPE_START_DASH_STATE","SCRIPT_DATA_ESCAPED_STATE","SCRIPT_DATA_ESCAPED_DASH_STATE","SCRIPT_DATA_ESCAPED_DASH_DASH_STATE","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE","SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE","SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE","SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE","SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE","BEFORE_ATTRIBUTE_NAME_STATE","ATTRIBUTE_NAME_STATE","AFTER_ATTRIBUTE_NAME_STATE","BEFORE_ATTRIBUTE_VALUE_STATE","ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE","ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE","ATTRIBUTE_VALUE_UNQUOTED_STATE","CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE","AFTER_ATTRIBUTE_VALUE_QUOTED_STATE","SELF_CLOSING_START_TAG_STATE","BOGUS_COMMENT_STATE","BOGUS_COMMENT_STATE_CONTINUATION","MARKUP_DECLARATION_OPEN_STATE","COMMENT_START_STATE","COMMENT_START_DASH_STATE","COMMENT_STATE","COMMENT_END_DASH_STATE","COMMENT_END_STATE","COMMENT_END_BANG_STATE","DOCTYPE_STATE","DOCTYPE_NAME_STATE","AFTER_DOCTYPE_NAME_STATE","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE","AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE","BOGUS_DOCTYPE_STATE","CDATA_SECTION_STATE","isWhitespace","cp","SPACE","LINE_FEED","TABULATION","FORM_FEED","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLower","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLetter","isAsciiAlphaNumeric","isDigit","isHex","LATIN_CAPITAL_F","LATIN_SMALL_F","isReservedCodePoint","toAsciiLowerCodePoint","toChar","String","fromCharCode","toAsciiLowerChar","findNamedEntityTreeBranch","nodeIx","branchCount","lo","hi","mid","midCp","Tokenizer","module","exports","options","preprocessor","tokenQueue","allowCDATA","state","returnState","tempBuff","additionalAllowedCp","lastStartTagName","consumedAfterSnapshot","active","currentCharacterToken","currentToken","currentAttr","locationInfo","assign","CHARACTER_TOKEN","NULL_CHARACTER_TOKEN","WHITESPACE_CHARACTER_TOKEN","START_TAG_TOKEN","END_TAG_TOKEN","COMMENT_TOKEN","DOCTYPE_TOKEN","EOF_TOKEN","HIBERNATION_TOKEN","MODE","prototype","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","PLAINTEXT","getTokenAttr","token","attrName","i","attrs","length","name","value","getNextToken","_hibernationSnapshot","_consume","_ensureHibernation","shift","write","chunk","isLastChunk","insertHtmlAtCurrentPos","endOfChunkHit","retreat","push","type","advance","_unconsume","_unconsumeSeveral","count","_reconsumeInState","_consumeSubsequentIfMatch","pattern","startCp","caseSensitive","consumedCount","isMatch","patternLength","patternPos","patternCp","EOF","_lookahead","isTempBufferEqualToScriptString","SCRIPT_STRING","_createStartTagToken","tagName","selfClosing","_createEndTagToken","_createCommentToken","data","_createDoctypeToken","initialName","forceQuirks","publicId","systemId","_createCharacterToken","ch","chars","_createAttr","attrNameFirstCh","_isDuplicateAttr","_leaveAttrName","toState","_leaveAttrValue","_isAppropriateEndTagToken","_emitCurrentToken","_emitCurrentCharacterToken","_emitEOFToken","_appendCharToCurrentCharacterToken","_emitCodePoint","NULL","_emitSeveralCodePoints","codePoints","_emitChar","_consumeNumericEntity","digits","nextCp","SEMICOLON","referencedCp","parseInt","replacement","REPLACEMENT_CHARACTER","_consumeNamedEntity","inAttr","referencedCodePoints","referenceSize","semicolonTerminated","current","inNode","nodeWithData","EQUALS_SIGN","_consumeCharacterReference","GREATER_THAN_SIGN","AMPERSAND","NUMBER_SIGN","LATIN_SMALL_X","LATIN_CAPITAL_X","_","dataState","dropParsedChunk","LESS_THAN_SIGN","characterReferenceInDataState","rcdataState","characterReferenceInRcdataState","rawtextState","scriptDataState","plaintextState","tagOpenState","EXCLAMATION_MARK","SOLIDUS","QUESTION_MARK","endTagOpenState","tagNameState","rcdataLessThanSignState","rcdataEndTagOpenState","rcdataEndTagNameState","rawtextLessThanSignState","rawtextEndTagOpenState","rawtextEndTagNameState","scriptDataLessThanSignState","scriptDataEndTagOpenState","scriptDataEndTagNameState","scriptDataEscapeStartState","HYPHEN_MINUS","scriptDataEscapeStartDashState","scriptDataEscapedState","scriptDataEscapedDashState","scriptDataEscapedDashDashState","scriptDataEscapedLessThanSignState","scriptDataEscapedEndTagOpenState","scriptDataEscapedEndTagNameState","scriptDataDoubleEscapeStartState","scriptDataDoubleEscapedState","scriptDataDoubleEscapedDashState","scriptDataDoubleEscapedDashDashState","scriptDataDoubleEscapedLessThanSignState","scriptDataDoubleEscapeEndState","beforeAttributeNameState","attributeNameState","QUOTATION_MARK","APOSTROPHE","afterAttributeNameState","beforeAttributeValueState","attributeValueDoubleQuotedState","attributeValueSingleQuotedState","attributeValueUnquotedState","GRAVE_ACCENT","characterReferenceInAttributeValueState","afterAttributeValueQuotedState","selfClosingStartTagState","bogusCommentState","bogusCommentStateContinuation","markupDeclarationOpenState","dashDashMatch","DASH_DASH_STRING","doctypeMatch","DOCTYPE_STRING","cdataMatch","CDATA_START_STRING","commentStartState","commentStartDashState","commentState","commentEndDashState","commentEndState","commentEndBangState","doctypeState","doctypeNameState","afterDoctypeNameState","publicMatch","PUBLIC_STRING","systemMatch","SYSTEM_STRING","beforeDoctypePublicIdentifierState","doctypePublicIdentifierDoubleQuotedState","doctypePublicIdentifierSingleQuotedState","betweenDoctypePublicAndSystemIdentifiersState","beforeDoctypeSystemIdentifierState","doctypeSystemIdentifierDoubleQuotedState","doctypeSystemIdentifierSingleQuotedState","afterDoctypeSystemIdentifierState","bogusDoctypeState","cdataSectionState","cdataEndMatch","CDATA_END_STRING"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Preprocessor = require('./preprocessor'),\n    locationInfoMixin = require('../location_info/tokenizer_mixin'),\n    UNICODE = require('../common/unicode'),\n    neTree = require('./named_entity_data');\n\n//Aliases\nvar $ = UNICODE.CODE_POINTS,\n    $$ = UNICODE.CODE_POINT_SEQUENCES;\n\n//Replacement code points for numeric entities\nvar NUMERIC_ENTITY_REPLACEMENTS = {\n    0x00: 0xFFFD, 0x0D: 0x000D, 0x80: 0x20AC, 0x81: 0x0081, 0x82: 0x201A, 0x83: 0x0192, 0x84: 0x201E,\n    0x85: 0x2026, 0x86: 0x2020, 0x87: 0x2021, 0x88: 0x02C6, 0x89: 0x2030, 0x8A: 0x0160, 0x8B: 0x2039,\n    0x8C: 0x0152, 0x8D: 0x008D, 0x8E: 0x017D, 0x8F: 0x008F, 0x90: 0x0090, 0x91: 0x2018, 0x92: 0x2019,\n    0x93: 0x201C, 0x94: 0x201D, 0x95: 0x2022, 0x96: 0x2013, 0x97: 0x2014, 0x98: 0x02DC, 0x99: 0x2122,\n    0x9A: 0x0161, 0x9B: 0x203A, 0x9C: 0x0153, 0x9D: 0x009D, 0x9E: 0x017E, 0x9F: 0x0178\n};\n\n// Named entity tree flags\nvar HAS_DATA_FLAG = 1 << 0;\nvar DATA_DUPLET_FLAG = 1 << 1;\nvar HAS_BRANCHES_FLAG = 1 << 2;\nvar MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG;\n\n\n//States\nvar DATA_STATE = 'DATA_STATE',\n    CHARACTER_REFERENCE_IN_DATA_STATE = 'CHARACTER_REFERENCE_IN_DATA_STATE',\n    RCDATA_STATE = 'RCDATA_STATE',\n    CHARACTER_REFERENCE_IN_RCDATA_STATE = 'CHARACTER_REFERENCE_IN_RCDATA_STATE',\n    RAWTEXT_STATE = 'RAWTEXT_STATE',\n    SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE',\n    PLAINTEXT_STATE = 'PLAINTEXT_STATE',\n    TAG_OPEN_STATE = 'TAG_OPEN_STATE',\n    END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE',\n    TAG_NAME_STATE = 'TAG_NAME_STATE',\n    RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE',\n    RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE',\n    RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE',\n    RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE',\n    RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE',\n    RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE',\n    SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE',\n    SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE',\n    SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE',\n    SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE',\n    SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE',\n    SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE',\n    BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE',\n    ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE',\n    AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE',\n    BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE',\n    ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE',\n    ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE',\n    ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE',\n    CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE = 'CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE',\n    AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE',\n    SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE',\n    BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE',\n    BOGUS_COMMENT_STATE_CONTINUATION = 'BOGUS_COMMENT_STATE_CONTINUATION',\n    MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE',\n    COMMENT_START_STATE = 'COMMENT_START_STATE',\n    COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE',\n    COMMENT_STATE = 'COMMENT_STATE',\n    COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE',\n    COMMENT_END_STATE = 'COMMENT_END_STATE',\n    COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE',\n    DOCTYPE_STATE = 'DOCTYPE_STATE',\n    DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE',\n    AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE',\n    BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE',\n    DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE',\n    DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE',\n    BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE',\n    BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\n    DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE',\n    DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE',\n    AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\n    BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE',\n    CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';\n\n//Utils\n\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\n\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\n\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\n\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\n\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\n\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\n\nfunction isDigit(cp, isHex) {\n    return isAsciiDigit(cp) || isHex && (cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F ||\n                                         cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F);\n}\n\nfunction isReservedCodePoint(cp) {\n    return cp >= 0xD800 && cp <= 0xDFFF || cp > 0x10FFFF;\n}\n\nfunction toAsciiLowerCodePoint(cp) {\n    return cp + 0x0020;\n}\n\n//NOTE: String.fromCharCode() function can handle only characters from BMP subset.\n//So, we need to workaround this manually.\n//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)\nfunction toChar(cp) {\n    if (cp <= 0xFFFF)\n        return String.fromCharCode(cp);\n\n    cp -= 0x10000;\n    return String.fromCharCode(cp >>> 10 & 0x3FF | 0xD800) + String.fromCharCode(0xDC00 | cp & 0x3FF);\n}\n\nfunction toAsciiLowerChar(cp) {\n    return String.fromCharCode(toAsciiLowerCodePoint(cp));\n}\n\nfunction findNamedEntityTreeBranch(nodeIx, cp) {\n    var branchCount = neTree[++nodeIx],\n        lo = ++nodeIx,\n        hi = lo + branchCount - 1;\n\n    while (lo <= hi) {\n        var mid = lo + hi >>> 1,\n            midCp = neTree[mid];\n\n        if (midCp < cp)\n            lo = mid + 1;\n\n        else if (midCp > cp)\n            hi = mid - 1;\n\n        else\n            return neTree[mid + branchCount];\n    }\n\n    return -1;\n}\n\n\n//Tokenizer\nvar Tokenizer = module.exports = function (options) {\n    this.preprocessor = new Preprocessor();\n\n    this.tokenQueue = [];\n\n    this.allowCDATA = false;\n\n    this.state = DATA_STATE;\n    this.returnState = '';\n\n    this.tempBuff = [];\n    this.additionalAllowedCp = void 0;\n    this.lastStartTagName = '';\n\n    this.consumedAfterSnapshot = -1;\n    this.active = false;\n\n    this.currentCharacterToken = null;\n    this.currentToken = null;\n    this.currentAttr = null;\n\n    if (options && options.locationInfo)\n        locationInfoMixin.assign(this);\n};\n\n//Token types\nTokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';\nTokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';\nTokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';\nTokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';\nTokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';\nTokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';\nTokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';\nTokenizer.EOF_TOKEN = 'EOF_TOKEN';\nTokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN';\n\n//Tokenizer initial states for different modes\nTokenizer.MODE = Tokenizer.prototype.MODE = {\n    DATA: DATA_STATE,\n    RCDATA: RCDATA_STATE,\n    RAWTEXT: RAWTEXT_STATE,\n    SCRIPT_DATA: SCRIPT_DATA_STATE,\n    PLAINTEXT: PLAINTEXT_STATE\n};\n\n//Static\nTokenizer.getTokenAttr = function (token, attrName) {\n    for (var i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName)\n            return token.attrs[i].value;\n    }\n\n    return null;\n};\n\n//API\nTokenizer.prototype.getNextToken = function () {\n    while (!this.tokenQueue.length && this.active) {\n        this._hibernationSnapshot();\n\n        var cp = this._consume();\n\n        if (!this._ensureHibernation())\n            this[this.state](cp);\n    }\n\n    return this.tokenQueue.shift();\n};\n\nTokenizer.prototype.write = function (chunk, isLastChunk) {\n    this.active = true;\n    this.preprocessor.write(chunk, isLastChunk);\n};\n\nTokenizer.prototype.insertHtmlAtCurrentPos = function (chunk) {\n    this.active = true;\n    this.preprocessor.insertHtmlAtCurrentPos(chunk);\n};\n\n//Hibernation\nTokenizer.prototype._hibernationSnapshot = function () {\n    this.consumedAfterSnapshot = 0;\n};\n\nTokenizer.prototype._ensureHibernation = function () {\n    if (this.preprocessor.endOfChunkHit) {\n        for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--)\n            this.preprocessor.retreat();\n\n        this.active = false;\n        this.tokenQueue.push({type: Tokenizer.HIBERNATION_TOKEN});\n\n        return true;\n    }\n\n    return false;\n};\n\n\n//Consumption\nTokenizer.prototype._consume = function () {\n    this.consumedAfterSnapshot++;\n    return this.preprocessor.advance();\n};\n\nTokenizer.prototype._unconsume = function () {\n    this.consumedAfterSnapshot--;\n    this.preprocessor.retreat();\n};\n\nTokenizer.prototype._unconsumeSeveral = function (count) {\n    while (count--)\n        this._unconsume();\n};\n\nTokenizer.prototype._reconsumeInState = function (state) {\n    this.state = state;\n    this._unconsume();\n};\n\nTokenizer.prototype._consumeSubsequentIfMatch = function (pattern, startCp, caseSensitive) {\n    var consumedCount = 0,\n        isMatch = true,\n        patternLength = pattern.length,\n        patternPos = 0,\n        cp = startCp,\n        patternCp = void 0;\n\n    for (; patternPos < patternLength; patternPos++) {\n        if (patternPos > 0) {\n            cp = this._consume();\n            consumedCount++;\n        }\n\n        if (cp === $.EOF) {\n            isMatch = false;\n            break;\n        }\n\n        patternCp = pattern[patternPos];\n\n        if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {\n            isMatch = false;\n            break;\n        }\n    }\n\n    if (!isMatch)\n        this._unconsumeSeveral(consumedCount);\n\n    return isMatch;\n};\n\n//Lookahead\nTokenizer.prototype._lookahead = function () {\n    var cp = this._consume();\n\n    this._unconsume();\n\n    return cp;\n};\n\n//Temp buffer\nTokenizer.prototype.isTempBufferEqualToScriptString = function () {\n    if (this.tempBuff.length !== $$.SCRIPT_STRING.length)\n        return false;\n\n    for (var i = 0; i < this.tempBuff.length; i++) {\n        if (this.tempBuff[i] !== $$.SCRIPT_STRING[i])\n            return false;\n    }\n\n    return true;\n};\n\n//Token creation\nTokenizer.prototype._createStartTagToken = function () {\n    this.currentToken = {\n        type: Tokenizer.START_TAG_TOKEN,\n        tagName: '',\n        selfClosing: false,\n        attrs: []\n    };\n};\n\nTokenizer.prototype._createEndTagToken = function () {\n    this.currentToken = {\n        type: Tokenizer.END_TAG_TOKEN,\n        tagName: '',\n        attrs: []\n    };\n};\n\nTokenizer.prototype._createCommentToken = function () {\n    this.currentToken = {\n        type: Tokenizer.COMMENT_TOKEN,\n        data: ''\n    };\n};\n\nTokenizer.prototype._createDoctypeToken = function (initialName) {\n    this.currentToken = {\n        type: Tokenizer.DOCTYPE_TOKEN,\n        name: initialName,\n        forceQuirks: false,\n        publicId: null,\n        systemId: null\n    };\n};\n\nTokenizer.prototype._createCharacterToken = function (type, ch) {\n    this.currentCharacterToken = {\n        type: type,\n        chars: ch\n    };\n};\n\n//Tag attributes\nTokenizer.prototype._createAttr = function (attrNameFirstCh) {\n    this.currentAttr = {\n        name: attrNameFirstCh,\n        value: ''\n    };\n};\n\nTokenizer.prototype._isDuplicateAttr = function () {\n    return Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) !== null;\n};\n\nTokenizer.prototype._leaveAttrName = function (toState) {\n    this.state = toState;\n\n    if (!this._isDuplicateAttr())\n        this.currentToken.attrs.push(this.currentAttr);\n};\n\nTokenizer.prototype._leaveAttrValue = function (toState) {\n    this.state = toState;\n};\n\n//Appropriate end tag token\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#appropriate-end-tag-token)\nTokenizer.prototype._isAppropriateEndTagToken = function () {\n    return this.lastStartTagName === this.currentToken.tagName;\n};\n\n//Token emission\nTokenizer.prototype._emitCurrentToken = function () {\n    this._emitCurrentCharacterToken();\n\n    //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.\n    if (this.currentToken.type === Tokenizer.START_TAG_TOKEN)\n        this.lastStartTagName = this.currentToken.tagName;\n\n    this.tokenQueue.push(this.currentToken);\n    this.currentToken = null;\n};\n\nTokenizer.prototype._emitCurrentCharacterToken = function () {\n    if (this.currentCharacterToken) {\n        this.tokenQueue.push(this.currentCharacterToken);\n        this.currentCharacterToken = null;\n    }\n};\n\nTokenizer.prototype._emitEOFToken = function () {\n    this._emitCurrentCharacterToken();\n    this.tokenQueue.push({type: Tokenizer.EOF_TOKEN});\n};\n\n//Characters emission\n\n//OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n//This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n//If we have a sequence of characters that belong to the same group, parser can process it\n//as a single solid character token.\n//So, there are 3 types of character tokens in parse5:\n//1)NULL_CHARACTER_TOKEN - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n//2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n//3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\nTokenizer.prototype._appendCharToCurrentCharacterToken = function (type, ch) {\n    if (this.currentCharacterToken && this.currentCharacterToken.type !== type)\n        this._emitCurrentCharacterToken();\n\n    if (this.currentCharacterToken)\n        this.currentCharacterToken.chars += ch;\n\n    else\n        this._createCharacterToken(type, ch);\n};\n\nTokenizer.prototype._emitCodePoint = function (cp) {\n    var type = Tokenizer.CHARACTER_TOKEN;\n\n    if (isWhitespace(cp))\n        type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;\n\n    else if (cp === $.NULL)\n        type = Tokenizer.NULL_CHARACTER_TOKEN;\n\n    this._appendCharToCurrentCharacterToken(type, toChar(cp));\n};\n\nTokenizer.prototype._emitSeveralCodePoints = function (codePoints) {\n    for (var i = 0; i < codePoints.length; i++)\n        this._emitCodePoint(codePoints[i]);\n};\n\n//NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.\n//So we can avoid additional checks here.\nTokenizer.prototype._emitChar = function (ch) {\n    this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);\n};\n\n//Character reference tokenization\nTokenizer.prototype._consumeNumericEntity = function (isHex) {\n    var digits = '',\n        nextCp = void 0;\n\n    do {\n        digits += toChar(this._consume());\n        nextCp = this._lookahead();\n    } while (nextCp !== $.EOF && isDigit(nextCp, isHex));\n\n    if (this._lookahead() === $.SEMICOLON)\n        this._consume();\n\n    var referencedCp = parseInt(digits, isHex ? 16 : 10),\n        replacement = NUMERIC_ENTITY_REPLACEMENTS[referencedCp];\n\n    if (replacement)\n        return replacement;\n\n    if (isReservedCodePoint(referencedCp))\n        return $.REPLACEMENT_CHARACTER;\n\n    return referencedCp;\n};\n\n// NOTE: for the details on this algorithm see\n// https://github.com/inikulin/parse5/tree/master/scripts/generate_named_entity_data/README.md\nTokenizer.prototype._consumeNamedEntity = function (inAttr) {\n    var referencedCodePoints = null,\n        referenceSize = 0,\n        cp = null,\n        consumedCount = 0,\n        semicolonTerminated = false;\n\n    for (var i = 0; i > -1;) {\n        var current = neTree[i],\n            inNode = current < MAX_BRANCH_MARKER_VALUE,\n            nodeWithData = inNode && current & HAS_DATA_FLAG;\n\n        if (nodeWithData) {\n            referencedCodePoints = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];\n            referenceSize = consumedCount;\n\n            if (cp === $.SEMICOLON) {\n                semicolonTerminated = true;\n                break;\n            }\n        }\n\n        cp = this._consume();\n        consumedCount++;\n\n        if (cp === $.EOF)\n            break;\n\n        if (inNode)\n            i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;\n\n        else\n            i = cp === current ? ++i : -1;\n    }\n\n\n    if (referencedCodePoints) {\n        if (!semicolonTerminated) {\n            //NOTE: unconsume excess (e.g. 'it' in '&notit')\n            this._unconsumeSeveral(consumedCount - referenceSize);\n\n            //NOTE: If the character reference is being consumed as part of an attribute and the next character\n            //is either a U+003D EQUALS SIGN character (=) or an alphanumeric ASCII character, then, for historical\n            //reasons, all the characters that were matched after the U+0026 AMPERSAND character (&) must be\n            //unconsumed, and nothing is returned.\n            //However, if this next character is in fact a U+003D EQUALS SIGN character (=), then this is a\n            //parse error, because some legacy user agents will misinterpret the markup in those cases.\n            //(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references)\n            if (inAttr) {\n                var nextCp = this._lookahead();\n\n                if (nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp)) {\n                    this._unconsumeSeveral(referenceSize);\n                    return null;\n                }\n            }\n        }\n\n        return referencedCodePoints;\n    }\n\n    this._unconsumeSeveral(consumedCount);\n\n    return null;\n};\n\nTokenizer.prototype._consumeCharacterReference = function (startCp, inAttr) {\n    if (isWhitespace(startCp) || startCp === $.GREATER_THAN_SIGN ||\n        startCp === $.AMPERSAND || startCp === this.additionalAllowedCp || startCp === $.EOF) {\n        //NOTE: not a character reference. No characters are consumed, and nothing is returned.\n        this._unconsume();\n        return null;\n    }\n\n    if (startCp === $.NUMBER_SIGN) {\n        //NOTE: we have a numeric entity candidate, now we should determine if it's hex or decimal\n        var isHex = false,\n            nextCp = this._lookahead();\n\n        if (nextCp === $.LATIN_SMALL_X || nextCp === $.LATIN_CAPITAL_X) {\n            this._consume();\n            isHex = true;\n        }\n\n        nextCp = this._lookahead();\n\n        //NOTE: if we have at least one digit this is a numeric entity for sure, so we consume it\n        if (nextCp !== $.EOF && isDigit(nextCp, isHex))\n            return [this._consumeNumericEntity(isHex)];\n\n        //NOTE: otherwise this is a bogus number entity and a parse error. Unconsume the number sign\n        //and the 'x'-character if appropriate.\n        this._unconsumeSeveral(isHex ? 2 : 1);\n        return null;\n    }\n\n    this._unconsume();\n\n    return this._consumeNamedEntity(inAttr);\n};\n\n//State machine\nvar _ = Tokenizer.prototype;\n\n//12.2.4.1 Data state\n//------------------------------------------------------------------\n_[DATA_STATE] = function dataState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.AMPERSAND)\n        this.state = CHARACTER_REFERENCE_IN_DATA_STATE;\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = TAG_OPEN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitCodePoint(cp);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.2 Character reference in data state\n//------------------------------------------------------------------\n_[CHARACTER_REFERENCE_IN_DATA_STATE] = function characterReferenceInDataState(cp) {\n    this.additionalAllowedCp = void 0;\n\n    var referencedCodePoints = this._consumeCharacterReference(cp, false);\n\n    if (!this._ensureHibernation()) {\n        if (referencedCodePoints)\n            this._emitSeveralCodePoints(referencedCodePoints);\n\n        else\n            this._emitChar('&');\n\n        this.state = DATA_STATE;\n    }\n};\n\n\n//12.2.4.3 RCDATA state\n//------------------------------------------------------------------\n_[RCDATA_STATE] = function rcdataState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.AMPERSAND)\n        this.state = CHARACTER_REFERENCE_IN_RCDATA_STATE;\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = RCDATA_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.4 Character reference in RCDATA state\n//------------------------------------------------------------------\n_[CHARACTER_REFERENCE_IN_RCDATA_STATE] = function characterReferenceInRcdataState(cp) {\n    this.additionalAllowedCp = void 0;\n\n    var referencedCodePoints = this._consumeCharacterReference(cp, false);\n\n    if (!this._ensureHibernation()) {\n        if (referencedCodePoints)\n            this._emitSeveralCodePoints(referencedCodePoints);\n\n        else\n            this._emitChar('&');\n\n        this.state = RCDATA_STATE;\n    }\n};\n\n\n//12.2.4.5 RAWTEXT state\n//------------------------------------------------------------------\n_[RAWTEXT_STATE] = function rawtextState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.LESS_THAN_SIGN)\n        this.state = RAWTEXT_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.6 Script data state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_STATE] = function scriptDataState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.LESS_THAN_SIGN)\n        this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.7 PLAINTEXT state\n//------------------------------------------------------------------\n_[PLAINTEXT_STATE] = function plaintextState(cp) {\n    this.preprocessor.dropParsedChunk();\n\n    if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._emitEOFToken();\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.8 Tag open state\n//------------------------------------------------------------------\n_[TAG_OPEN_STATE] = function tagOpenState(cp) {\n    if (cp === $.EXCLAMATION_MARK)\n        this.state = MARKUP_DECLARATION_OPEN_STATE;\n\n    else if (cp === $.SOLIDUS)\n        this.state = END_TAG_OPEN_STATE;\n\n    else if (isAsciiLetter(cp)) {\n        this._createStartTagToken();\n        this._reconsumeInState(TAG_NAME_STATE);\n    }\n\n    else if (cp === $.QUESTION_MARK)\n        this._reconsumeInState(BOGUS_COMMENT_STATE);\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(DATA_STATE);\n    }\n};\n\n\n//12.2.4.9 End tag open state\n//------------------------------------------------------------------\n_[END_TAG_OPEN_STATE] = function endTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(TAG_NAME_STATE);\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN)\n        this.state = DATA_STATE;\n\n    else if (cp === $.EOF) {\n        this._reconsumeInState(DATA_STATE);\n        this._emitChar('<');\n        this._emitChar('/');\n    }\n\n    else\n        this._reconsumeInState(BOGUS_COMMENT_STATE);\n};\n\n\n//12.2.4.10 Tag name state\n//------------------------------------------------------------------\n_[TAG_NAME_STATE] = function tagNameState(cp) {\n    if (isWhitespace(cp))\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n\n    else if (cp === $.SOLIDUS)\n        this.state = SELF_CLOSING_START_TAG_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (isAsciiUpper(cp))\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n\n    else if (cp === $.NULL)\n        this.currentToken.tagName += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this.currentToken.tagName += toChar(cp);\n};\n\n\n//12.2.4.11 RCDATA less-than sign state\n//------------------------------------------------------------------\n_[RCDATA_LESS_THAN_SIGN_STATE] = function rcdataLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = RCDATA_END_TAG_OPEN_STATE;\n    }\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(RCDATA_STATE);\n    }\n};\n\n\n//12.2.4.12 RCDATA end tag open state\n//------------------------------------------------------------------\n_[RCDATA_END_TAG_OPEN_STATE] = function rcdataEndTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._emitChar('/');\n        this._reconsumeInState(RCDATA_STATE);\n    }\n};\n\n\n//12.2.4.13 RCDATA end tag name state\n//------------------------------------------------------------------\n_[RCDATA_END_TAG_NAME_STATE] = function rcdataEndTagNameState(cp) {\n    if (isAsciiUpper(cp)) {\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.currentToken.tagName += toChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else {\n        if (this._isAppropriateEndTagToken()) {\n            if (isWhitespace(cp)) {\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                return;\n            }\n\n            if (cp === $.SOLIDUS) {\n                this.state = SELF_CLOSING_START_TAG_STATE;\n                return;\n            }\n\n            if (cp === $.GREATER_THAN_SIGN) {\n                this.state = DATA_STATE;\n                this._emitCurrentToken();\n                return;\n            }\n        }\n\n        this._emitChar('<');\n        this._emitChar('/');\n        this._emitSeveralCodePoints(this.tempBuff);\n        this._reconsumeInState(RCDATA_STATE);\n    }\n};\n\n\n//12.2.4.14 RAWTEXT less-than sign state\n//------------------------------------------------------------------\n_[RAWTEXT_LESS_THAN_SIGN_STATE] = function rawtextLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = RAWTEXT_END_TAG_OPEN_STATE;\n    }\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(RAWTEXT_STATE);\n    }\n};\n\n\n//12.2.4.15 RAWTEXT end tag open state\n//------------------------------------------------------------------\n_[RAWTEXT_END_TAG_OPEN_STATE] = function rawtextEndTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._emitChar('/');\n        this._reconsumeInState(RAWTEXT_STATE);\n    }\n};\n\n\n//12.2.4.16 RAWTEXT end tag name state\n//------------------------------------------------------------------\n_[RAWTEXT_END_TAG_NAME_STATE] = function rawtextEndTagNameState(cp) {\n    if (isAsciiUpper(cp)) {\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.currentToken.tagName += toChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else {\n        if (this._isAppropriateEndTagToken()) {\n            if (isWhitespace(cp)) {\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                return;\n            }\n\n            if (cp === $.SOLIDUS) {\n                this.state = SELF_CLOSING_START_TAG_STATE;\n                return;\n            }\n\n            if (cp === $.GREATER_THAN_SIGN) {\n                this._emitCurrentToken();\n                this.state = DATA_STATE;\n                return;\n            }\n        }\n\n        this._emitChar('<');\n        this._emitChar('/');\n        this._emitSeveralCodePoints(this.tempBuff);\n        this._reconsumeInState(RAWTEXT_STATE);\n    }\n};\n\n\n//12.2.4.17 Script data less-than sign state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_LESS_THAN_SIGN_STATE] = function scriptDataLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;\n    }\n\n    else if (cp === $.EXCLAMATION_MARK) {\n        this.state = SCRIPT_DATA_ESCAPE_START_STATE;\n        this._emitChar('<');\n        this._emitChar('!');\n    }\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n    }\n};\n\n\n//12.2.4.18 Script data end tag open state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_END_TAG_OPEN_STATE] = function scriptDataEndTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._emitChar('/');\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n    }\n};\n\n\n//12.2.4.19 Script data end tag name state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_END_TAG_NAME_STATE] = function scriptDataEndTagNameState(cp) {\n    if (isAsciiUpper(cp)) {\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.currentToken.tagName += toChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else {\n        if (this._isAppropriateEndTagToken()) {\n            if (isWhitespace(cp)) {\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                return;\n            }\n\n            else if (cp === $.SOLIDUS) {\n                this.state = SELF_CLOSING_START_TAG_STATE;\n                return;\n            }\n\n            else if (cp === $.GREATER_THAN_SIGN) {\n                this._emitCurrentToken();\n                this.state = DATA_STATE;\n                return;\n            }\n        }\n\n        this._emitChar('<');\n        this._emitChar('/');\n        this._emitSeveralCodePoints(this.tempBuff);\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n    }\n};\n\n\n//12.2.4.20 Script data escape start state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPE_START_STATE] = function scriptDataEscapeStartState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n};\n\n\n//12.2.4.21 Script data escape start dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPE_START_DASH_STATE] = function scriptDataEscapeStartDashState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_STATE);\n};\n\n\n//12.2.4.22 Script data escaped state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_STATE] = function scriptDataEscapedState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.23 Script data escaped dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_DASH_STATE] = function scriptDataEscapedDashState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.NULL) {\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n};\n\n\n//12.2.4.24 Script data escaped dash dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_DASH_DASH_STATE] = function scriptDataEscapedDashDashState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this._emitChar('-');\n\n    else if (cp === $.LESS_THAN_SIGN)\n        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = SCRIPT_DATA_STATE;\n        this._emitChar('>');\n    }\n\n    else if (cp === $.NULL) {\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n};\n\n\n//12.2.4.25 Script data escaped less-than sign state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataEscapedLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;\n    }\n\n    else if (isAsciiLetter(cp)) {\n        this.tempBuff = [];\n        this._emitChar('<');\n        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n    }\n};\n\n\n//12.2.4.26 Script data escaped end tag open state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE] = function scriptDataEscapedEndTagOpenState(cp) {\n    if (isAsciiLetter(cp)) {\n        this._createEndTagToken();\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);\n    }\n\n    else {\n        this._emitChar('<');\n        this._emitChar('/');\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n    }\n};\n\n\n//12.2.4.27 Script data escaped end tag name state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE] = function scriptDataEscapedEndTagNameState(cp) {\n    if (isAsciiUpper(cp)) {\n        this.currentToken.tagName += toAsciiLowerChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.currentToken.tagName += toChar(cp);\n        this.tempBuff.push(cp);\n    }\n\n    else {\n        if (this._isAppropriateEndTagToken()) {\n            if (isWhitespace(cp)) {\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n                return;\n            }\n\n            if (cp === $.SOLIDUS) {\n                this.state = SELF_CLOSING_START_TAG_STATE;\n                return;\n            }\n\n            if (cp === $.GREATER_THAN_SIGN) {\n                this._emitCurrentToken();\n                this.state = DATA_STATE;\n                return;\n            }\n        }\n\n        this._emitChar('<');\n        this._emitChar('/');\n        this._emitSeveralCodePoints(this.tempBuff);\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n    }\n};\n\n\n//12.2.4.28 Script data double escape start state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE] = function scriptDataDoubleEscapeStartState(cp) {\n    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n        this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE : SCRIPT_DATA_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n\n    else if (isAsciiUpper(cp)) {\n        this.tempBuff.push(toAsciiLowerCodePoint(cp));\n        this._emitCodePoint(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.tempBuff.push(cp);\n        this._emitCodePoint(cp);\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n};\n\n\n//12.2.4.29 Script data double escaped state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_STATE] = function scriptDataDoubleEscapedState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else if (cp === $.LESS_THAN_SIGN) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n        this._emitChar('<');\n    }\n\n    else if (cp === $.NULL)\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this._emitCodePoint(cp);\n};\n\n\n//12.2.4.30 Script data double escaped dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE] = function scriptDataDoubleEscapedDashState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;\n        this._emitChar('-');\n    }\n\n    else if (cp === $.LESS_THAN_SIGN) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n        this._emitChar('<');\n    }\n\n    else if (cp === $.NULL) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n};\n\n\n//12.2.4.31 Script data double escaped dash dash state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE] = function scriptDataDoubleEscapedDashDashState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this._emitChar('-');\n\n    else if (cp === $.LESS_THAN_SIGN) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n        this._emitChar('<');\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = SCRIPT_DATA_STATE;\n        this._emitChar('>');\n    }\n\n    else if (cp === $.NULL) {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n        this._emitCodePoint(cp);\n    }\n};\n\n\n//12.2.4.32 Script data double escaped less-than sign state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataDoubleEscapedLessThanSignState(cp) {\n    if (cp === $.SOLIDUS) {\n        this.tempBuff = [];\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;\n        this._emitChar('/');\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n};\n\n\n//12.2.4.33 Script data double escape end state\n//------------------------------------------------------------------\n_[SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE] = function scriptDataDoubleEscapeEndState(cp) {\n    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n        this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_ESCAPED_STATE : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n        this._emitCodePoint(cp);\n    }\n\n    else if (isAsciiUpper(cp)) {\n        this.tempBuff.push(toAsciiLowerCodePoint(cp));\n        this._emitCodePoint(cp);\n    }\n\n    else if (isAsciiLower(cp)) {\n        this.tempBuff.push(cp);\n        this._emitCodePoint(cp);\n    }\n\n    else\n        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n};\n\n\n//12.2.4.34 Before attribute name state\n//------------------------------------------------------------------\n_[BEFORE_ATTRIBUTE_NAME_STATE] = function beforeAttributeNameState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF)\n        this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);\n\n    else if (cp === $.EQUALS_SIGN) {\n        this._createAttr('=');\n        this.state = ATTRIBUTE_NAME_STATE;\n    }\n\n    else {\n        this._createAttr('');\n        this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n    }\n};\n\n\n//12.2.4.35 Attribute name state\n//------------------------------------------------------------------\n_[ATTRIBUTE_NAME_STATE] = function attributeNameState(cp) {\n    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {\n        this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);\n        this._unconsume();\n    }\n\n    else if (cp === $.EQUALS_SIGN)\n        this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);\n\n    else if (isAsciiUpper(cp))\n        this.currentAttr.name += toAsciiLowerChar(cp);\n\n    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN)\n        this.currentAttr.name += toChar(cp);\n\n    else if (cp === $.NULL)\n        this.currentAttr.name += UNICODE.REPLACEMENT_CHARACTER;\n\n    else\n        this.currentAttr.name += toChar(cp);\n};\n\n\n//12.2.4.36 After attribute name state\n//------------------------------------------------------------------\n_[AFTER_ATTRIBUTE_NAME_STATE] = function afterAttributeNameState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.SOLIDUS)\n        this.state = SELF_CLOSING_START_TAG_STATE;\n\n    else if (cp === $.EQUALS_SIGN)\n        this.state = BEFORE_ATTRIBUTE_VALUE_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else {\n        this._createAttr('');\n        this._reconsumeInState(ATTRIBUTE_NAME_STATE);\n    }\n};\n\n\n//12.2.4.37 Before attribute value state\n//------------------------------------------------------------------\n_[BEFORE_ATTRIBUTE_VALUE_STATE] = function beforeAttributeValueState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.QUOTATION_MARK)\n        this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\n\n    else if (cp === $.APOSTROPHE)\n        this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\n\n    else\n        this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);\n};\n\n\n//12.2.4.38 Attribute value (double-quoted) state\n//------------------------------------------------------------------\n_[ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE] = function attributeValueDoubleQuotedState(cp) {\n    if (cp === $.QUOTATION_MARK)\n        this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n\n    else if (cp === $.AMPERSAND) {\n        this.additionalAllowedCp = $.QUOTATION_MARK;\n        this.returnState = this.state;\n        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n    }\n\n    else if (cp === $.NULL)\n        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this.currentAttr.value += toChar(cp);\n};\n\n\n//12.2.4.39 Attribute value (single-quoted) state\n//------------------------------------------------------------------\n_[ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE] = function attributeValueSingleQuotedState(cp) {\n    if (cp === $.APOSTROPHE)\n        this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\n\n    else if (cp === $.AMPERSAND) {\n        this.additionalAllowedCp = $.APOSTROPHE;\n        this.returnState = this.state;\n        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n    }\n\n    else if (cp === $.NULL)\n        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this.currentAttr.value += toChar(cp);\n};\n\n\n//12.2.4.40 Attribute value (unquoted) state\n//------------------------------------------------------------------\n_[ATTRIBUTE_VALUE_UNQUOTED_STATE] = function attributeValueUnquotedState(cp) {\n    if (isWhitespace(cp))\n        this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n\n    else if (cp === $.AMPERSAND) {\n        this.additionalAllowedCp = $.GREATER_THAN_SIGN;\n        this.returnState = this.state;\n        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this._leaveAttrValue(DATA_STATE);\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.NULL)\n        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN ||\n             cp === $.EQUALS_SIGN || cp === $.GRAVE_ACCENT)\n        this.currentAttr.value += toChar(cp);\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this.currentAttr.value += toChar(cp);\n};\n\n\n//12.2.4.41 Character reference in attribute value state\n//------------------------------------------------------------------\n_[CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE] = function characterReferenceInAttributeValueState(cp) {\n    var referencedCodePoints = this._consumeCharacterReference(cp, true);\n\n    if (!this._ensureHibernation()) {\n        if (referencedCodePoints) {\n            for (var i = 0; i < referencedCodePoints.length; i++)\n                this.currentAttr.value += toChar(referencedCodePoints[i]);\n        }\n        else\n            this.currentAttr.value += '&';\n\n        this.state = this.returnState;\n    }\n};\n\n\n//12.2.4.42 After attribute value (quoted) state\n//------------------------------------------------------------------\n_[AFTER_ATTRIBUTE_VALUE_QUOTED_STATE] = function afterAttributeValueQuotedState(cp) {\n    if (isWhitespace(cp))\n        this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);\n\n    else if (cp === $.SOLIDUS)\n        this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this._leaveAttrValue(DATA_STATE);\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n};\n\n\n//12.2.4.43 Self-closing start tag state\n//------------------------------------------------------------------\n_[SELF_CLOSING_START_TAG_STATE] = function selfClosingStartTagState(cp) {\n    if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.selfClosing = true;\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF)\n        this._reconsumeInState(DATA_STATE);\n\n    else\n        this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n};\n\n\n//12.2.4.44 Bogus comment state\n//------------------------------------------------------------------\n_[BOGUS_COMMENT_STATE] = function bogusCommentState() {\n    this._createCommentToken();\n    this._reconsumeInState(BOGUS_COMMENT_STATE_CONTINUATION);\n};\n\n//HACK: to support streaming and make BOGUS_COMMENT_STATE reentrant we've\n//introduced BOGUS_COMMENT_STATE_CONTINUATION state which will not produce\n//comment token on each call.\n_[BOGUS_COMMENT_STATE_CONTINUATION] = function bogusCommentStateContinuation(cp) {\n    while (true) {\n        if (cp === $.GREATER_THAN_SIGN) {\n            this.state = DATA_STATE;\n            break;\n        }\n\n        else if (cp === $.EOF) {\n            this._reconsumeInState(DATA_STATE);\n            break;\n        }\n\n        else {\n            this.currentToken.data += cp === $.NULL ? UNICODE.REPLACEMENT_CHARACTER : toChar(cp);\n\n            this._hibernationSnapshot();\n            cp = this._consume();\n\n            if (this._ensureHibernation())\n                return;\n        }\n    }\n\n    this._emitCurrentToken();\n};\n\n//12.2.4.45 Markup declaration open state\n//------------------------------------------------------------------\n_[MARKUP_DECLARATION_OPEN_STATE] = function markupDeclarationOpenState(cp) {\n    var dashDashMatch = this._consumeSubsequentIfMatch($$.DASH_DASH_STRING, cp, true),\n        doctypeMatch = !dashDashMatch && this._consumeSubsequentIfMatch($$.DOCTYPE_STRING, cp, false),\n        cdataMatch = !dashDashMatch && !doctypeMatch &&\n                     this.allowCDATA &&\n                     this._consumeSubsequentIfMatch($$.CDATA_START_STRING, cp, true);\n\n    if (!this._ensureHibernation()) {\n        if (dashDashMatch) {\n            this._createCommentToken();\n            this.state = COMMENT_START_STATE;\n        }\n\n        else if (doctypeMatch)\n            this.state = DOCTYPE_STATE;\n\n        else if (cdataMatch)\n            this.state = CDATA_SECTION_STATE;\n\n        else\n            this._reconsumeInState(BOGUS_COMMENT_STATE);\n    }\n};\n\n\n//12.2.4.46 Comment start state\n//------------------------------------------------------------------\n_[COMMENT_START_STATE] = function commentStartState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this.state = COMMENT_START_DASH_STATE;\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else {\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.47 Comment start dash state\n//------------------------------------------------------------------\n_[COMMENT_START_DASH_STATE] = function commentStartDashState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this.state = COMMENT_END_STATE;\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += '-';\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else {\n        this.currentToken.data += '-';\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.48 Comment state\n//------------------------------------------------------------------\n_[COMMENT_STATE] = function commentState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this.state = COMMENT_END_DASH_STATE;\n\n    else if (cp === $.NULL)\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.data += toChar(cp);\n};\n\n\n//12.2.4.49 Comment end dash state\n//------------------------------------------------------------------\n_[COMMENT_END_DASH_STATE] = function commentEndDashState(cp) {\n    if (cp === $.HYPHEN_MINUS)\n        this.state = COMMENT_END_STATE;\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += '-';\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else {\n        this.currentToken.data += '-';\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.50 Comment end state\n//------------------------------------------------------------------\n_[COMMENT_END_STATE] = function commentEndState(cp) {\n    if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.EXCLAMATION_MARK)\n        this.state = COMMENT_END_BANG_STATE;\n\n    else if (cp === $.HYPHEN_MINUS)\n        this.currentToken.data += '-';\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += '--';\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._reconsumeInState(DATA_STATE);\n        this._emitCurrentToken();\n    }\n\n    else {\n        this.currentToken.data += '--';\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.51 Comment end bang state\n//------------------------------------------------------------------\n_[COMMENT_END_BANG_STATE] = function commentEndBangState(cp) {\n    if (cp === $.HYPHEN_MINUS) {\n        this.currentToken.data += '--!';\n        this.state = COMMENT_END_DASH_STATE;\n    }\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else if (cp === $.NULL) {\n        this.currentToken.data += '--!';\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n        this.state = COMMENT_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else {\n        this.currentToken.data += '--!';\n        this.currentToken.data += toChar(cp);\n        this.state = COMMENT_STATE;\n    }\n};\n\n\n//12.2.4.52 DOCTYPE state\n//------------------------------------------------------------------\n_[DOCTYPE_STATE] = function doctypeState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this._createDoctypeToken(null);\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._createDoctypeToken(null);\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n    else {\n        this._createDoctypeToken('');\n        this._reconsumeInState(DOCTYPE_NAME_STATE);\n    }\n};\n\n\n//12.2.4.54 DOCTYPE name state\n//------------------------------------------------------------------\n_[DOCTYPE_NAME_STATE] = function doctypeNameState(cp) {\n    if (isWhitespace(cp) || cp === $.GREATER_THAN_SIGN || cp === $.EOF)\n        this._reconsumeInState(AFTER_DOCTYPE_NAME_STATE);\n\n    else if (isAsciiUpper(cp))\n        this.currentToken.name += toAsciiLowerChar(cp);\n\n    else if (cp === $.NULL)\n        this.currentToken.name += UNICODE.REPLACEMENT_CHARACTER;\n\n    else\n        this.currentToken.name += toChar(cp);\n};\n\n\n//12.2.4.55 After DOCTYPE name state\n//------------------------------------------------------------------\n_[AFTER_DOCTYPE_NAME_STATE] = function afterDoctypeNameState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n        this._emitCurrentToken();\n    }\n\n    else {\n        var publicMatch = this._consumeSubsequentIfMatch($$.PUBLIC_STRING, cp, false),\n            systemMatch = !publicMatch && this._consumeSubsequentIfMatch($$.SYSTEM_STRING, cp, false);\n\n        if (!this._ensureHibernation()) {\n            if (publicMatch)\n                this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\n\n            else if (systemMatch)\n                this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n\n            else {\n                this.currentToken.forceQuirks = true;\n                this.state = BOGUS_DOCTYPE_STATE;\n            }\n        }\n    }\n};\n\n\n//12.2.4.57 Before DOCTYPE public identifier state\n//------------------------------------------------------------------\n_[BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE] = function beforeDoctypePublicIdentifierState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.QUOTATION_MARK) {\n        this.currentToken.publicId = '';\n        this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n    }\n\n    else if (cp === $.APOSTROPHE) {\n        this.currentToken.publicId = '';\n        this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n    }\n\n    else {\n        this.currentToken.forceQuirks = true;\n        this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n    }\n};\n\n\n//12.2.4.58 DOCTYPE public identifier (double-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypePublicIdentifierDoubleQuotedState(cp) {\n    if (cp === $.QUOTATION_MARK)\n        this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;\n\n    else if (cp === $.NULL)\n        this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.publicId += toChar(cp);\n};\n\n\n//12.2.4.59 DOCTYPE public identifier (single-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypePublicIdentifierSingleQuotedState(cp) {\n    if (cp === $.APOSTROPHE)\n        this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;\n\n    else if (cp === $.NULL)\n        this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.publicId += toChar(cp);\n};\n\n\n//12.2.4.61 Between DOCTYPE public and system identifiers state\n//------------------------------------------------------------------\n_[BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE] = function betweenDoctypePublicAndSystemIdentifiersState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.QUOTATION_MARK) {\n        this.currentToken.systemId = '';\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n    }\n\n\n    else if (cp === $.APOSTROPHE) {\n        this.currentToken.systemId = '';\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n    }\n\n    else {\n        this.currentToken.forceQuirks = true;\n        this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n    }\n};\n\n\n//12.2.4.63 Before DOCTYPE system identifier state\n//------------------------------------------------------------------\n_[BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function beforeDoctypeSystemIdentifierState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.QUOTATION_MARK) {\n        this.currentToken.systemId = '';\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n    }\n\n    else if (cp === $.APOSTROPHE) {\n        this.currentToken.systemId = '';\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n    }\n\n    else {\n        this.currentToken.forceQuirks = true;\n        this._reconsumeInState(BOGUS_DOCTYPE_STATE);\n    }\n};\n\n\n//12.2.4.64 DOCTYPE system identifier (double-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypeSystemIdentifierDoubleQuotedState(cp) {\n    if (cp === $.QUOTATION_MARK)\n        this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.NULL)\n        this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.systemId += toChar(cp);\n};\n\n\n//12.2.4.65 DOCTYPE system identifier (single-quoted) state\n//------------------------------------------------------------------\n_[DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypeSystemIdentifierSingleQuotedState(cp) {\n    if (cp === $.APOSTROPHE)\n        this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\n\n    else if (cp === $.GREATER_THAN_SIGN) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.NULL)\n        this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.currentToken.systemId += toChar(cp);\n};\n\n\n//12.2.4.66 After DOCTYPE system identifier state\n//------------------------------------------------------------------\n_[AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function afterDoctypeSystemIdentifierState(cp) {\n    if (isWhitespace(cp))\n        return;\n\n    if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this.currentToken.forceQuirks = true;\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n\n    else\n        this.state = BOGUS_DOCTYPE_STATE;\n};\n\n\n//12.2.4.67 Bogus DOCTYPE state\n//------------------------------------------------------------------\n_[BOGUS_DOCTYPE_STATE] = function bogusDoctypeState(cp) {\n    if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n        this.state = DATA_STATE;\n    }\n\n    else if (cp === $.EOF) {\n        this._emitCurrentToken();\n        this._reconsumeInState(DATA_STATE);\n    }\n};\n\n\n//12.2.4.68 CDATA section state\n//------------------------------------------------------------------\n_[CDATA_SECTION_STATE] = function cdataSectionState(cp) {\n    while (true) {\n        if (cp === $.EOF) {\n            this._reconsumeInState(DATA_STATE);\n            break;\n        }\n\n        else {\n            var cdataEndMatch = this._consumeSubsequentIfMatch($$.CDATA_END_STRING, cp, true);\n\n            if (this._ensureHibernation())\n                break;\n\n            if (cdataEndMatch) {\n                this.state = DATA_STATE;\n                break;\n            }\n\n            this._emitCodePoint(cp);\n\n            this._hibernationSnapshot();\n            cp = this._consume();\n\n            if (this._ensureHibernation())\n                break;\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}