{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Het Patel\\\\Desktop\\\\vscode\\\\stockappagain\\\\Components\\\\Stock.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { av_key } from \"../config\";\nimport { LineChart } from \"react-native-chart-kit\";\n\nvar Stock = function Stock(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var _route$params$x = route.params.x,\n      ticker = _route$params$x.ticker,\n      name = _route$params$x.name;\n\n  var _useState = useState([0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      prices = _useState2[0],\n      setprices = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      price = _useState4[0],\n      setprice = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      high = _useState6[0],\n      sethigh = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      low = _useState8[0],\n      setlow = _useState8[1];\n\n  var get_intraday = function get_intraday(interval) {\n    fetch(\"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\" + ticker + \"&interval=\" + interval + \"min&apikey=\" + av_key).then(function (res) {\n      return res.json();\n    }).then(function (resJson) {\n      setresponse(JSON.stringify(resJson));\n      var raw_data = resJson[\"Time Series (\" + interval + \"min)\"];\n      var processed_data = [];\n\n      for (var obj in raw_data) {\n        var _price = raw_data[obj];\n        processed_data.push(parseFloat(_price[\"1. open\"]));\n      }\n\n      setprices(processed_data);\n    }).catch(function (error) {\n      Alert.alert(error);\n    });\n  };\n\n  var get_quote = function get_quote() {\n    fetch(\"https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=\" + ticker + \"&apikey=\" + av_key).then(function (res) {\n      return res.json();\n    }).then(function (resJson) {\n      var data = resJson[\"Global Quote\"];\n    });\n  };\n\n  useEffect(function () {\n    get_intraday(5);\n    get_quote();\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, ticker + \" - \" + name), React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      marginTop: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return get_intraday(1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"1min\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return get_intraday(5);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"5min\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return get_intraday(15);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"15min\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return get_intraday(30);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"30min\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return get_intraday(60);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"60min\"))), React.createElement(LineChart, {\n    data: {\n      datasets: [{\n        data: prices\n      }]\n    },\n    width: Dimensions.get(\"window\").width,\n    height: 320,\n    chartConfig: {\n      backgroundColor: \"#e26a00\",\n      backgroundGradientFromOpacity: \"#fb8c00\",\n      backgroundGradientToOpacity: \"#ffa726\",\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(31, 218, 255, \" + opacity + \")\";\n      },\n      labelColor: function labelColor() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(255, 255, 255, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 0\n      },\n      propsForDots: {\n        r: \"1\",\n        strokeWidth: \"1\",\n        stroke: \"#269dff\"\n      }\n    },\n    style: {\n      marginVertical: 8,\n      borderRadius: 5\n    },\n    withInnerLines: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, name)));\n};\n\nexport default Stock;","map":{"version":3,"sources":["C:/Users/Het Patel/Desktop/vscode/stockappagain/Components/Stock.js"],"names":["React","useState","useEffect","av_key","LineChart","Stock","route","navigation","params","x","ticker","name","prices","setprices","price","setprice","high","sethigh","low","setlow","get_intraday","interval","fetch","then","res","json","resJson","setresponse","JSON","stringify","raw_data","processed_data","obj","push","parseFloat","catch","error","Alert","alert","get_quote","data","marginTop","alignItems","datasets","Dimensions","get","width","backgroundColor","backgroundGradientFromOpacity","backgroundGradientToOpacity","decimalPlaces","color","opacity","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke","marginVertical"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Dimensions,\r\n  Alert,\r\n} from \"react-native\";\r\n\r\nimport { av_key } from \"../config\";\r\n\r\nimport { LineChart } from \"react-native-chart-kit\";\r\n\r\nconst Stock = ({ route, navigation }) => {\r\n  const { ticker, name } = route.params.x;\r\n\r\n  const [prices, setprices] = useState([0]);\r\n  const [price, setprice] = useState(\"\");\r\n  const [high, sethigh] = useState(\"\");\r\n  const [low, setlow] = useState(\"\")\r\n\r\n  const get_intraday = (interval) => {\r\n    fetch(\r\n      \"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=\" +\r\n        ticker +\r\n        \"&interval=\" +\r\n        interval +\r\n        \"min&apikey=\" +\r\n        av_key\r\n    )\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        setresponse(JSON.stringify(resJson));\r\n        const raw_data = resJson[\"Time Series (\" + interval + \"min)\"];\r\n        const processed_data = [];\r\n        for (const obj in raw_data) {\r\n          const price = raw_data[obj];\r\n          processed_data.push(parseFloat(price[\"1. open\"]));\r\n        }\r\n        setprices(processed_data);\r\n      })\r\n      .catch((error) => {\r\n        Alert.alert(error);\r\n      });\r\n  };\r\n\r\n  const get_quote = () => {\r\n    fetch(\r\n      \"https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=\" +\r\n        ticker +\r\n        \"&apikey=\" +\r\n        av_key\r\n    )\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        const data = resJson[\"Global Quote\"];\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    get_intraday(5);\r\n    get_quote();\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      <View style={{ marginTop: 50 }}></View>\r\n      <Text>{ticker + \" - \" + name}</Text>\r\n      <View style={{ alignItems: \"center\", marginTop: 30 }}>\r\n        <TouchableOpacity onPress={() => get_intraday(1)}>\r\n          <Text>1min</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => get_intraday(5)}>\r\n          <Text>5min</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => get_intraday(15)}>\r\n          <Text>15min</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => get_intraday(30)}>\r\n          <Text>30min</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => get_intraday(60)}>\r\n          <Text>60min</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <LineChart\r\n        data={{\r\n          datasets: [\r\n            {\r\n              data: prices,\r\n            },\r\n          ],\r\n        }}\r\n        width={Dimensions.get(\"window\").width} // from react-native\r\n        height={320}\r\n        chartConfig={{\r\n          backgroundColor: \"#e26a00\",\r\n          backgroundGradientFromOpacity: \"#fb8c00\",\r\n          backgroundGradientToOpacity: \"#ffa726\",\r\n          decimalPlaces: 2, // optional, defaults to 2dp\r\n          color: (opacity = 1) => `rgba(31, 218, 255, ${opacity})`,\r\n          labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n          style: {\r\n            borderRadius: 0,\r\n          },\r\n          propsForDots: {\r\n            r: \"1\",\r\n            strokeWidth: \"1\",\r\n            stroke: \"#269dff\",\r\n          },\r\n        }}\r\n        style={{\r\n          marginVertical: 8,\r\n          borderRadius: 5,\r\n        }}\r\n        withInnerLines={false}\r\n      />\r\n\r\n\r\n      <View>\r\n      <Text>{name}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Stock;\r\n"]},"metadata":{},"sourceType":"module"}