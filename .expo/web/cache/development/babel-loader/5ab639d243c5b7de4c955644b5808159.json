{"ast":null,"code":"'use strict';\n\nvar ParserStream = require(\"./parser_stream\"),\n    setPrototypeOf = require(\"../common/setPrototypeOf\"),\n    $ = require(\"../common/html\").TAG_NAMES;\n\nvar PlainTextConversionStream = module.exports = function (options) {\n  ParserStream.call(this, options);\n\n  this.parser._insertFakeElement($.HTML);\n\n  this.parser._insertFakeElement($.HEAD);\n\n  this.parser.openElements.pop();\n\n  this.parser._insertFakeElement($.BODY);\n\n  this.parser._insertFakeElement($.PRE);\n\n  this.parser.treeAdapter.insertText(this.parser.openElements.current, '\\n');\n  this.parser.switchToPlaintextParsing();\n};\n\nsetPrototypeOf(PlainTextConversionStream.prototype, ParserStream.prototype);","map":{"version":3,"sources":["/Users/adarsh/Documents/StocksUI/node_modules/react-native-parse-html/lib/parser/plain_text_conversion_stream.js"],"names":["ParserStream","require","setPrototypeOf","$","TAG_NAMES","PlainTextConversionStream","module","exports","options","call","parser","_insertFakeElement","HTML","HEAD","openElements","pop","BODY","PRE","treeAdapter","insertText","current","switchToPlaintextParsing","prototype"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,mBAA1B;AAAA,IACIC,cAAc,GAAGD,OAAO,4BAD5B;AAAA,IAEIE,CAAC,GAAGF,OAAO,kBAAP,CAA0BG,SAFlC;;AA2BA,IAAIC,yBAAyB,GAAGC,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AAChER,EAAAA,YAAY,CAACS,IAAb,CAAkB,IAAlB,EAAwBD,OAAxB;;AAGA,OAAKE,MAAL,CAAYC,kBAAZ,CAA+BR,CAAC,CAACS,IAAjC;;AACA,OAAKF,MAAL,CAAYC,kBAAZ,CAA+BR,CAAC,CAACU,IAAjC;;AACA,OAAKH,MAAL,CAAYI,YAAZ,CAAyBC,GAAzB;;AACA,OAAKL,MAAL,CAAYC,kBAAZ,CAA+BR,CAAC,CAACa,IAAjC;;AACA,OAAKN,MAAL,CAAYC,kBAAZ,CAA+BR,CAAC,CAACc,GAAjC;;AACA,OAAKP,MAAL,CAAYQ,WAAZ,CAAwBC,UAAxB,CAAmC,KAAKT,MAAL,CAAYI,YAAZ,CAAyBM,OAA5D,EAAqE,IAArE;AACA,OAAKV,MAAL,CAAYW,wBAAZ;AACH,CAXD;;AAaAnB,cAAc,CAACG,yBAAyB,CAACiB,SAA3B,EAAsCtB,YAAY,CAACsB,SAAnD,CAAd","sourcesContent":["'use strict';\n\nvar ParserStream = require('./parser_stream'),\n    setPrototypeOf = require('../common/setPrototypeOf'),\n    $ = require('../common/html').TAG_NAMES;\n\n/**\n * Converts plain text files into HTML document as required by [HTML specification]{@link https://html.spec.whatwg.org/#read-text}.\n * A [writable stream]{@link https://nodejs.org/api/stream.html#stream_class_stream_writable}.\n * @class PlainTextConversionStream\n * @memberof parse5\n * @instance\n * @extends stream.Writable\n * @param {ParserOptions} options - Conversion options.\n * @example\n * var parse5 = require('parse5');\n * var fs = require('fs');\n *\n * var file = fs.createReadStream('/home/war_and_peace.txt');\n *\n * var converter = new parse5.PlainTextConversionStream();\n *\n * converter.on('finish', function() {\n *     var body = converter.document.childNodes[0].childNodes[1];\n * });\n *\n * file.pipe(converter);\n * });\n */\nvar PlainTextConversionStream = module.exports = function (options) {\n    ParserStream.call(this, options);\n\n    // NOTE: see https://html.spec.whatwg.org/#read-text\n    this.parser._insertFakeElement($.HTML);\n    this.parser._insertFakeElement($.HEAD);\n    this.parser.openElements.pop();\n    this.parser._insertFakeElement($.BODY);\n    this.parser._insertFakeElement($.PRE);\n    this.parser.treeAdapter.insertText(this.parser.openElements.current, '\\n');\n    this.parser.switchToPlaintextParsing();\n};\n\nsetPrototypeOf(PlainTextConversionStream.prototype, ParserStream.prototype);\n"]},"metadata":{},"sourceType":"script"}