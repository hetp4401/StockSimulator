{"ast":null,"code":"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\nvar K_MAX_LENGTH = 0x7fffffff;\nexports.kMaxLength = K_MAX_LENGTH;\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\nif (!Buffer.TYPED_ARRAY_SUPPORT) {\n  console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use v4.x if you require old browser support.');\n}\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction createBuffer(length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  var buf = new Uint8Array(length);\n  buf.__proto__ = Buffer.prototype;\n  return buf;\n}\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(arg);\n  }\n\n  return from(arg, encodingOrOffset, length);\n}\n\nBuffer.prototype.__proto__ = Uint8Array.prototype;\nBuffer.__proto__ = Uint8Array;\n\nif (typeof Symbol !== 'undefined' && (typeof Symbol === \"function\" ? Symbol.species : \"@@species\") && Buffer[typeof Symbol === \"function\" ? Symbol.species : \"@@species\"] === Buffer) {\n  Object.defineProperty(Buffer, typeof Symbol === \"function\" ? Symbol.species : \"@@species\", {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  });\n}\n\nBuffer.poolSize = 8192;\n\nfunction from(value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset);\n  }\n\n  return fromObject(value);\n}\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length);\n};\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(size);\n  }\n\n  if (fill !== undefined) {\n    return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n  }\n\n  return createBuffer(size);\n}\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding);\n};\n\nfunction allocUnsafe(size) {\n  assertSize(size);\n  return createBuffer(size < 0 ? 0 : checked(size) | 0);\n}\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size);\n};\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size);\n};\n\nfunction fromString(string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  var buf = createBuffer(length);\n  var actual = buf.write(string, encoding);\n\n  if (actual !== length) {\n    buf = buf.slice(0, actual);\n  }\n\n  return buf;\n}\n\nfunction fromArrayLike(array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  var buf = createBuffer(length);\n\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255;\n  }\n\n  return buf;\n}\n\nfunction fromArrayBuffer(array, byteOffset, length) {\n  array.byteLength;\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  var buf;\n\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array);\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset);\n  } else {\n    buf = new Uint8Array(array, byteOffset, length);\n  }\n\n  buf.__proto__ = Buffer.prototype;\n  return buf;\n}\n\nfunction fromObject(obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    var buf = createBuffer(len);\n\n    if (buf.length === 0) {\n      return buf;\n    }\n\n    obj.copy(buf, 0, 0, len);\n    return buf;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(0);\n      }\n\n      return fromArrayLike(obj);\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0;\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length;\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false;\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  }\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  if (buffer.length === 0) return -1;\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset;\n\n  if (isNaN(byteOffset)) {\n    byteOffset = dir ? 0 : buffer.length - 1;\n  }\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  }\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  if (Buffer.isBuffer(val)) {\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF;\n\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0;\n\n    if (isFinite(length)) {\n      length = length >>> 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n}\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints);\n  }\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf = this.subarray(start, end);\n  newBuf.__proto__ = Buffer.prototype;\n  return newBuf;\n};\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset + 3] = value >>> 24;\n  this[offset + 2] = value >>> 16;\n  this[offset + 1] = value >>> 8;\n  this[offset] = value & 0xff;\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  this[offset + 2] = value >>> 16;\n  this[offset + 3] = value >>> 24;\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n};\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0;\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds');\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000) {\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n};\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n};\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  if (str.length < 2) return '';\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      if (!leadSurrogate) {\n        if (codePoint > 0xDBFF) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        }\n\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val;\n}","map":{"version":3,"sources":["/Users/adarsh/Documents/StocksUI/node_modules/react-native-stream/src/buffer.js"],"names":["base64","require","ieee754","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","arr","Uint8Array","__proto__","prototype","foo","e","createBuffer","length","RangeError","buf","arg","encodingOrOffset","Error","allocUnsafe","from","Symbol","species","Object","defineProperty","value","configurable","enumerable","writable","poolSize","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","undefined","checked","allocUnsafeSlow","string","isEncoding","byteLength","actual","write","slice","fromArrayLike","array","i","byteOffset","obj","isBuffer","len","copy","buffer","isnan","type","Array","isArray","data","toString","b","_isBuffer","compare","a","x","y","Math","min","String","toLowerCase","concat","list","pos","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","swap16","swap32","swap64","arguments","apply","equals","inspect","str","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","indexOf","call","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","includes","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","newBuf","subarray","checkOffset","ext","readUIntLE","noAssert","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","set","code","charCodeAt","INVALID_BASE64_RE","base64clean","stringtrim","replace","trim","units","Infinity","leadSurrogate","byteArray","c","hi","lo","toByteArray","src","dst"],"mappings":"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","sourcesContent":["/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT) {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use v4.x if you require old browser support.')\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('Invalid typed array length')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return fromObject(value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(0)\n      }\n      return fromArrayLike(obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n"]},"metadata":{},"sourceType":"script"}