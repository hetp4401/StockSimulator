{"ast":null,"code":"var newSetProto = Object.setPrototypeOf != null;\n\nexports.inherits = function (ctor, superCtor) {\n  if (ctor === undefined || ctor === null) throw new TypeError('The constructor to \"inherits\" must not be ' + 'null or undefined');\n  if (superCtor === undefined || superCtor === null) throw new TypeError('The super constructor to \"inherits\" must not ' + 'be null or undefined');\n  if (superCtor.prototype === undefined) throw new TypeError('The super constructor to \"inherits\" must ' + 'have a prototype');\n  ctor.super_ = superCtor;\n\n  if (newSetProto) {\n    Object.setPrototypeOf(ctor.prototype, superCtor.prototype);\n  } else {\n    ctor.prototype.__proto__ = superCtor.prototype;\n  }\n};","map":{"version":3,"sources":["/Users/adarsh/Documents/StocksUI/node_modules/react-native-stream/src/util.js"],"names":["newSetProto","Object","setPrototypeOf","exports","inherits","ctor","superCtor","undefined","TypeError","prototype","super_","__proto__"],"mappings":"AAeA,IAAMA,WAAW,GAAIC,MAAM,CAACC,cAAP,IAAyB,IAA9C;;AACAC,OAAO,CAACC,QAAR,GAAmB,UAASC,IAAT,EAAeC,SAAf,EAA0B;AAE3C,MAAID,IAAI,KAAKE,SAAT,IAAsBF,IAAI,KAAK,IAAnC,EACE,MAAM,IAAIG,SAAJ,CAAc,+CACA,mBADd,CAAN;AAGF,MAAIF,SAAS,KAAKC,SAAd,IAA2BD,SAAS,KAAK,IAA7C,EACE,MAAM,IAAIE,SAAJ,CAAc,kDACA,sBADd,CAAN;AAGF,MAAIF,SAAS,CAACG,SAAV,KAAwBF,SAA5B,EACE,MAAM,IAAIC,SAAJ,CAAc,8CACA,kBADd,CAAN;AAGFH,EAAAA,IAAI,CAACK,MAAL,GAAcJ,SAAd;;AACA,MAAIN,WAAJ,EAAiB;AACfC,IAAAA,MAAM,CAACC,cAAP,CAAsBG,IAAI,CAACI,SAA3B,EAAsCH,SAAS,CAACG,SAAhD;AACD,GAFD,MAEO;AACLJ,IAAAA,IAAI,CAACI,SAAL,CAAeE,SAAf,GAA2BL,SAAS,CAACG,SAArC;AACD;AACF,CApBD","sourcesContent":["/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n * @throws {TypeError} Will error if either constructor is null, or if\n *     the super constructor lacks a prototype.\n */\nconst newSetProto = (Object.setPrototypeOf != null);\nexports.inherits = function(ctor, superCtor) {\n\n  if (ctor === undefined || ctor === null)\n    throw new TypeError('The constructor to \"inherits\" must not be ' +\n                        'null or undefined');\n\n  if (superCtor === undefined || superCtor === null)\n    throw new TypeError('The super constructor to \"inherits\" must not ' +\n                        'be null or undefined');\n\n  if (superCtor.prototype === undefined)\n    throw new TypeError('The super constructor to \"inherits\" must ' +\n                        'have a prototype');\n\n  ctor.super_ = superCtor;\n  if (newSetProto) {\n    Object.setPrototypeOf(ctor.prototype, superCtor.prototype);\n  } else {\n    ctor.prototype.__proto__ = superCtor.prototype;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}