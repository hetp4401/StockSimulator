{"ast":null,"code":"'use strict';\n\nvar ReadableStream = require('react-native-stream').Readable,\n    setPrototypeOf = require(\"../common/setPrototypeOf\"),\n    Serializer = require(\"./index\");\n\nvar SerializerStream = module.exports = function (node, options) {\n  ReadableStream.call(this);\n  this.serializer = new Serializer(node, options);\n  Object.defineProperty(this.serializer, 'html', {\n    get: function get() {\n      return '';\n    },\n    set: this.push.bind(this)\n  });\n};\n\nsetPrototypeOf(SerializerStream.prototype, ReadableStream.prototype);\n\nSerializerStream.prototype._read = function () {\n  this.serializer.serialize();\n  this.push(null);\n};","map":{"version":3,"sources":["/Users/adarsh/Documents/StocksUI/node_modules/react-native-parse-html/lib/serializer/serializer_stream.js"],"names":["ReadableStream","require","Readable","setPrototypeOf","Serializer","SerializerStream","module","exports","node","options","call","serializer","Object","defineProperty","get","set","push","bind","prototype","_read","serialize"],"mappings":"AAAA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,qBAAD,CAAP,CAA+BC,QAApD;AAAA,IACIC,cAAc,GAAGF,OAAO,4BAD5B;AAAA,IAEIG,UAAU,GAAGH,OAAO,WAFxB;;AAyBA,IAAII,gBAAgB,GAAGC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AAC7DT,EAAAA,cAAc,CAACU,IAAf,CAAoB,IAApB;AAEA,OAAKC,UAAL,GAAkB,IAAIP,UAAJ,CAAeI,IAAf,EAAqBC,OAArB,CAAlB;AAEAG,EAAAA,MAAM,CAACC,cAAP,CAAsB,KAAKF,UAA3B,EAAuC,MAAvC,EAA+C;AAG3CG,IAAAA,GAAG,EAAE,eAAY;AACb,aAAO,EAAP;AACH,KAL0C;AAM3CC,IAAAA,GAAG,EAAE,KAAKC,IAAL,CAAUC,IAAV,CAAe,IAAf;AANsC,GAA/C;AAQH,CAbD;;AAeAd,cAAc,CAACE,gBAAgB,CAACa,SAAlB,EAA6BlB,cAAc,CAACkB,SAA5C,CAAd;;AAGAb,gBAAgB,CAACa,SAAjB,CAA2BC,KAA3B,GAAmC,YAAY;AAC3C,OAAKR,UAAL,CAAgBS,SAAhB;AACA,OAAKJ,IAAL,CAAU,IAAV;AACH,CAHD","sourcesContent":["'use strict';\n\nvar ReadableStream = require('react-native-stream').Readable,\n    setPrototypeOf = require('../common/setPrototypeOf'),\n    Serializer = require('./index');\n\n/**\n * Streaming AST node to an HTML serializer.\n * A [readable stream]{@link https://nodejs.org/api/stream.html#stream_class_stream_readable}.\n * @class SerializerStream\n * @memberof parse5\n * @instance\n * @extends stream.Readable\n * @param {ASTNode} node - Node to serialize.\n * @param {SerializerOptions} [options] - Serialization options.\n * @example\n * var parse5 = require('parse5');\n * var fs = require('fs');\n *\n * var file = fs.createWriteStream('/home/index.html');\n *\n * // Serializes the parsed document to HTML and writes it to the file.\n * var document = parse5.parse('<body>Who is John Galt?</body>');\n * var serializer = new parse5.SerializerStream(document);\n *\n * serializer.pipe(file);\n */\nvar SerializerStream = module.exports = function (node, options) {\n    ReadableStream.call(this);\n\n    this.serializer = new Serializer(node, options);\n\n    Object.defineProperty(this.serializer, 'html', {\n        //NOTE: To make `+=` concat operator work properly we define\n        //getter which always returns empty string\n        get: function () {\n            return '';\n        },\n        set: this.push.bind(this)\n    });\n};\n\nsetPrototypeOf(SerializerStream.prototype, ReadableStream.prototype);\n\n//Readable stream implementation\nSerializerStream.prototype._read = function () {\n    this.serializer.serialize();\n    this.push(null);\n};\n"]},"metadata":{},"sourceType":"script"}