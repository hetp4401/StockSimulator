{"ast":null,"code":"var DomUtils = require(\"domutils\"),\n    hasAttrib = DomUtils.hasAttrib,\n    getAttributeValue = DomUtils.getAttributeValue,\n    falseFunc = require(\"boolbase\").falseFunc;\n\nvar reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nvar attributeRules = {\n  __proto__: null,\n  equals: function equals(next, data) {\n    var name = data.name,\n        value = data.value;\n\n    if (data.ignoreCase) {\n      value = value.toLowerCase();\n      return function equalsIC(elem) {\n        var attr = getAttributeValue(elem, name);\n        return attr != null && attr.toLowerCase() === value && next(elem);\n      };\n    }\n\n    return function equals(elem) {\n      return getAttributeValue(elem, name) === value && next(elem);\n    };\n  },\n  hyphen: function hyphen(next, data) {\n    var name = data.name,\n        value = data.value,\n        len = value.length;\n\n    if (data.ignoreCase) {\n      value = value.toLowerCase();\n      return function hyphenIC(elem) {\n        var attr = getAttributeValue(elem, name);\n        return attr != null && (attr.length === len || attr.charAt(len) === \"-\") && attr.substr(0, len).toLowerCase() === value && next(elem);\n      };\n    }\n\n    return function hyphen(elem) {\n      var attr = getAttributeValue(elem, name);\n      return attr != null && attr.substr(0, len) === value && (attr.length === len || attr.charAt(len) === \"-\") && next(elem);\n    };\n  },\n  element: function element(next, data) {\n    var name = data.name,\n        value = data.value;\n\n    if (/\\s/.test(value)) {\n      return falseFunc;\n    }\n\n    value = value.replace(reChars, \"\\\\$&\");\n    var pattern = \"(?:^|\\\\s)\" + value + \"(?:$|\\\\s)\",\n        flags = data.ignoreCase ? \"i\" : \"\",\n        regex = new RegExp(pattern, flags);\n    return function element(elem) {\n      var attr = getAttributeValue(elem, name);\n      return attr != null && regex.test(attr) && next(elem);\n    };\n  },\n  exists: function exists(next, data) {\n    var name = data.name;\n    return function exists(elem) {\n      return hasAttrib(elem, name) && next(elem);\n    };\n  },\n  start: function start(next, data) {\n    var name = data.name,\n        value = data.value,\n        len = value.length;\n\n    if (len === 0) {\n      return falseFunc;\n    }\n\n    if (data.ignoreCase) {\n      value = value.toLowerCase();\n      return function startIC(elem) {\n        var attr = getAttributeValue(elem, name);\n        return attr != null && attr.substr(0, len).toLowerCase() === value && next(elem);\n      };\n    }\n\n    return function start(elem) {\n      var attr = getAttributeValue(elem, name);\n      return attr != null && attr.substr(0, len) === value && next(elem);\n    };\n  },\n  end: function end(next, data) {\n    var name = data.name,\n        value = data.value,\n        len = -value.length;\n\n    if (len === 0) {\n      return falseFunc;\n    }\n\n    if (data.ignoreCase) {\n      value = value.toLowerCase();\n      return function endIC(elem) {\n        var attr = getAttributeValue(elem, name);\n        return attr != null && attr.substr(len).toLowerCase() === value && next(elem);\n      };\n    }\n\n    return function end(elem) {\n      var attr = getAttributeValue(elem, name);\n      return attr != null && attr.substr(len) === value && next(elem);\n    };\n  },\n  any: function any(next, data) {\n    var name = data.name,\n        value = data.value;\n\n    if (value === \"\") {\n      return falseFunc;\n    }\n\n    if (data.ignoreCase) {\n      var regex = new RegExp(value.replace(reChars, \"\\\\$&\"), \"i\");\n      return function anyIC(elem) {\n        var attr = getAttributeValue(elem, name);\n        return attr != null && regex.test(attr) && next(elem);\n      };\n    }\n\n    return function any(elem) {\n      var attr = getAttributeValue(elem, name);\n      return attr != null && attr.indexOf(value) >= 0 && next(elem);\n    };\n  },\n  not: function not(next, data) {\n    var name = data.name,\n        value = data.value;\n\n    if (value === \"\") {\n      return function notEmpty(elem) {\n        return !!getAttributeValue(elem, name) && next(elem);\n      };\n    } else if (data.ignoreCase) {\n      value = value.toLowerCase();\n      return function notIC(elem) {\n        var attr = getAttributeValue(elem, name);\n        return attr != null && attr.toLowerCase() !== value && next(elem);\n      };\n    }\n\n    return function not(elem) {\n      return getAttributeValue(elem, name) !== value && next(elem);\n    };\n  }\n};\nmodule.exports = {\n  compile: function compile(next, data, options) {\n    if (options && options.strict && (data.ignoreCase || data.action === \"not\")) throw SyntaxError(\"Unsupported attribute selector\");\n    return attributeRules[data.action](next, data);\n  },\n  rules: attributeRules\n};","map":{"version":3,"sources":["/Users/adarsh/Documents/StocksUI/node_modules/react-native-cheerio/node_modules/css-select/lib/attributes.js"],"names":["DomUtils","require","hasAttrib","getAttributeValue","falseFunc","reChars","attributeRules","__proto__","equals","next","data","name","value","ignoreCase","toLowerCase","equalsIC","elem","attr","hyphen","len","length","hyphenIC","charAt","substr","element","test","replace","pattern","flags","regex","RegExp","exists","start","startIC","end","endIC","any","anyIC","indexOf","not","notEmpty","notIC","module","exports","compile","options","strict","action","SyntaxError","rules"],"mappings":"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","sourcesContent":["var DomUtils  = require(\"domutils\"),\n    hasAttrib = DomUtils.hasAttrib,\n    getAttributeValue = DomUtils.getAttributeValue,\n    falseFunc = require(\"boolbase\").falseFunc;\n\n//https://github.com/slevithan/XRegExp/blob/master/src/xregexp.js#L469\nvar reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\n\n/*\n\tattribute selectors\n*/\n\nvar attributeRules = {\n\t__proto__: null,\n\tequals: function(next, data){\n\t\tvar name  = data.name,\n\t\t    value = data.value;\n\n\t\tif(data.ignoreCase){\n\t\t\tvalue = value.toLowerCase();\n\n\t\t\treturn function equalsIC(elem){\n\t\t\t\tvar attr = getAttributeValue(elem, name);\n\t\t\t\treturn attr != null && attr.toLowerCase() === value && next(elem);\n\t\t\t};\n\t\t}\n\n\t\treturn function equals(elem){\n\t\t\treturn getAttributeValue(elem, name) === value && next(elem);\n\t\t};\n\t},\n\thyphen: function(next, data){\n\t\tvar name  = data.name,\n\t\t    value = data.value,\n\t\t    len = value.length;\n\n\t\tif(data.ignoreCase){\n\t\t\tvalue = value.toLowerCase();\n\n\t\t\treturn function hyphenIC(elem){\n\t\t\t\tvar attr = getAttributeValue(elem, name);\n\t\t\t\treturn attr != null &&\n\t\t\t\t\t\t(attr.length === len || attr.charAt(len) === \"-\") &&\n\t\t\t\t\t\tattr.substr(0, len).toLowerCase() === value &&\n\t\t\t\t\t\tnext(elem);\n\t\t\t};\n\t\t}\n\n\t\treturn function hyphen(elem){\n\t\t\tvar attr = getAttributeValue(elem, name);\n\t\t\treturn attr != null &&\n\t\t\t\t\tattr.substr(0, len) === value &&\n\t\t\t\t\t(attr.length === len || attr.charAt(len) === \"-\") &&\n\t\t\t\t\tnext(elem);\n\t\t};\n\t},\n\telement: function(next, data){\n\t\tvar name = data.name,\n\t\t    value = data.value;\n\n\t\tif(/\\s/.test(value)){\n\t\t\treturn falseFunc;\n\t\t}\n\n\t\tvalue = value.replace(reChars, \"\\\\$&\");\n\n\t\tvar pattern = \"(?:^|\\\\s)\" + value + \"(?:$|\\\\s)\",\n\t\t    flags = data.ignoreCase ? \"i\" : \"\",\n\t\t    regex = new RegExp(pattern, flags);\n\n\t\treturn function element(elem){\n\t\t\tvar attr = getAttributeValue(elem, name);\n\t\t\treturn attr != null && regex.test(attr) && next(elem);\n\t\t};\n\t},\n\texists: function(next, data){\n\t\tvar name = data.name;\n\t\treturn function exists(elem){\n\t\t\treturn hasAttrib(elem, name) && next(elem);\n\t\t};\n\t},\n\tstart: function(next, data){\n\t\tvar name  = data.name,\n\t\t    value = data.value,\n\t\t    len = value.length;\n\n\t\tif(len === 0){\n\t\t\treturn falseFunc;\n\t\t}\n\t\t\n\t\tif(data.ignoreCase){\n\t\t\tvalue = value.toLowerCase();\n\n\t\t\treturn function startIC(elem){\n\t\t\t\tvar attr = getAttributeValue(elem, name);\n\t\t\t\treturn attr != null && attr.substr(0, len).toLowerCase() === value && next(elem);\n\t\t\t};\n\t\t}\n\n\t\treturn function start(elem){\n\t\t\tvar attr = getAttributeValue(elem, name);\n\t\t\treturn attr != null && attr.substr(0, len) === value && next(elem);\n\t\t};\n\t},\n\tend: function(next, data){\n\t\tvar name  = data.name,\n\t\t    value = data.value,\n\t\t    len   = -value.length;\n\n\t\tif(len === 0){\n\t\t\treturn falseFunc;\n\t\t}\n\n\t\tif(data.ignoreCase){\n\t\t\tvalue = value.toLowerCase();\n\n\t\t\treturn function endIC(elem){\n\t\t\t\tvar attr = getAttributeValue(elem, name);\n\t\t\t\treturn attr != null && attr.substr(len).toLowerCase() === value && next(elem);\n\t\t\t};\n\t\t}\n\n\t\treturn function end(elem){\n\t\t\tvar attr = getAttributeValue(elem, name);\n\t\t\treturn attr != null && attr.substr(len) === value && next(elem);\n\t\t};\n\t},\n\tany: function(next, data){\n\t\tvar name  = data.name,\n\t\t    value = data.value;\n\n\t\tif(value === \"\"){\n\t\t\treturn falseFunc;\n\t\t}\n\n\t\tif(data.ignoreCase){\n\t\t\tvar regex = new RegExp(value.replace(reChars, \"\\\\$&\"), \"i\");\n\n\t\t\treturn function anyIC(elem){\n\t\t\t\tvar attr = getAttributeValue(elem, name);\n\t\t\t\treturn attr != null && regex.test(attr) && next(elem);\n\t\t\t};\n\t\t}\n\n\t\treturn function any(elem){\n\t\t\tvar attr = getAttributeValue(elem, name);\n\t\t\treturn attr != null && attr.indexOf(value) >= 0 && next(elem);\n\t\t};\n\t},\n\tnot: function(next, data){\n\t\tvar name  = data.name,\n\t\t    value = data.value;\n\n\t\tif(value === \"\"){\n\t\t\treturn function notEmpty(elem){\n\t\t\t\treturn !!getAttributeValue(elem, name) && next(elem);\n\t\t\t};\n\t\t} else if(data.ignoreCase){\n\t\t\tvalue = value.toLowerCase();\n\n\t\t\treturn function notIC(elem){\n\t\t\t\tvar attr = getAttributeValue(elem, name);\n\t\t\t\treturn attr != null && attr.toLowerCase() !== value && next(elem);\n\t\t\t};\n\t\t}\n\n\t\treturn function not(elem){\n\t\t\treturn getAttributeValue(elem, name) !== value && next(elem);\n\t\t};\n\t}\n};\n\nmodule.exports = {\n\tcompile: function(next, data, options){\n\t\tif(options && options.strict && (\n\t\t\tdata.ignoreCase || data.action === \"not\"\n\t\t)) throw SyntaxError(\"Unsupported attribute selector\");\n\t\treturn attributeRules[data.action](next, data);\n\t},\n\trules: attributeRules\n};\n"]},"metadata":{},"sourceType":"script"}