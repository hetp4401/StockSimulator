{"ast":null,"code":"'use strict';\n\nfunction EventHandlers() {}\n\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\n\nexports.EventEmitter = EventEmitter;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\nvar defaultMaxListeners = 10;\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function get() {\n    return defaultMaxListeners;\n  },\n  set: function set(arg) {\n    console;\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function () {\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n)) throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nfunction emitNone(handler, isFn, self) {\n  if (isFn) handler.call(self);else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n\n    for (var i = 0; i < len; ++i) {\n      listeners[i].call(self);\n    }\n  }\n}\n\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn) handler.call(self, arg1);else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n\n    for (var i = 0; i < len; ++i) {\n      listeners[i].call(self, arg1);\n    }\n  }\n}\n\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn) handler.call(self, arg1, arg2);else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n\n    for (var i = 0; i < len; ++i) {\n      listeners[i].call(self, arg1, arg2);\n    }\n  }\n}\n\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn) handler.call(self, arg1, arg2, arg3);else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n\n    for (var i = 0; i < len; ++i) {\n      listeners[i].call(self, arg1, arg2, arg3);\n    }\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn) handler.apply(self, args);else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n\n    for (var i = 0; i < len; ++i) {\n      listeners[i].apply(self, args);\n    }\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events;\n  var doError = type === 'error';\n  events = this._events;\n  if (events) doError = doError && events.error == null;else if (!doError) return false;\n\n  if (doError) {\n    er = arguments[1];\n\n    if (er instanceof Error) {\n      throw er;\n    } else {\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n\n    return false;\n  }\n\n  handler = events[type];\n  if (!handler) return false;\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n\n  switch (len) {\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n\n    default:\n      args = new Array(len - 1);\n\n      for (i = 1; i < len; i++) {\n        args[i - 1] = arguments[i];\n      }\n\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n  if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n  events = target._events;\n\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    if (events.newListener) {\n      target.emit('newListener', type, listener.listener ? listener.listener : listener);\n      events = target._events;\n    }\n\n    existing = events[type];\n  }\n\n  if (!existing) {\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      existing = events[type] = prepend ? [listener, existing] : [existing, listener];\n    } else {\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener = function prependListener(type, listener) {\n  return _addListener(this, type, listener, true);\n};\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n\n  function g() {\n    target.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n  if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n  this.prependListener(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.removeListener = function removeListener(type, listener) {\n  var list, events, position, i, originalListener;\n  if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\n  events = this._events;\n  if (!events) return this;\n  list = events[type];\n  if (!list) return this;\n\n  if (list === listener || list.listener === listener) {\n    if (--this._eventsCount === 0) this._events = new EventHandlers();else {\n      delete events[type];\n      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n    }\n  } else if (typeof list !== 'function') {\n    position = -1;\n\n    for (i = list.length; i-- > 0;) {\n      if (list[i] === listener || list[i].listener === listener) {\n        originalListener = list[i].listener;\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0) return this;\n\n    if (list.length === 1) {\n      list[0] = undefined;\n\n      if (--this._eventsCount === 0) {\n        this._events = new EventHandlers();\n        return this;\n      } else {\n        delete events[type];\n      }\n    } else {\n      spliceOne(list, position);\n    }\n\n    if (events.removeListener) this.emit('removeListener', type, originalListener || listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n  var listeners, events;\n  events = this._events;\n  if (!events) return this;\n\n  if (!events.removeListener) {\n    if (arguments.length === 0) {\n      this._events = new EventHandlers();\n      this._eventsCount = 0;\n    } else if (events[type]) {\n      if (--this._eventsCount === 0) this._events = new EventHandlers();else delete events[type];\n    }\n\n    return this;\n  }\n\n  if (arguments.length === 0) {\n    var keys = Object.keys(events);\n\n    for (var i = 0, key; i < keys.length; ++i) {\n      key = keys[i];\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n\n    this.removeAllListeners('removeListener');\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n    return this;\n  }\n\n  listeners = events[type];\n\n  if (typeof listeners === 'function') {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    do {\n      this.removeListener(type, listeners[listeners.length - 1]);\n    } while (listeners[0]);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n  if (!events) ret = [];else {\n    evlistener = events[type];\n    if (!evlistener) ret = [];else if (typeof evlistener === 'function') ret = [evlistener.listener || evlistener];else ret = unwrapListeners(evlistener);\n  }\n  return ret;\n};\n\nEventEmitter.listenerCount = function (emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\n\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n\n  while (i--) {\n    copy[i] = arr[i];\n  }\n\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n\n  return ret;\n}","map":{"version":3,"sources":["/Users/adarsh/Documents/StocksUI/node_modules/react-native-stream/src/events.js"],"names":["EventHandlers","prototype","Object","create","EventEmitter","init","call","exports","_events","undefined","_maxListeners","defaultMaxListeners","defineProperty","enumerable","get","set","arg","console","getPrototypeOf","_eventsCount","setMaxListeners","n","isNaN","TypeError","$getMaxListeners","that","getMaxListeners","emitNone","handler","isFn","self","len","length","listeners","arrayClone","i","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","args","apply","emit","type","er","events","doError","error","arguments","Error","err","context","Array","_addListener","target","listener","prepend","m","existing","newListener","unshift","push","addListener","on","prependListener","_onceWrap","fired","g","removeListener","once","prependOnceListener","list","position","originalListener","spliceOne","removeAllListeners","keys","key","evlistener","ret","unwrapListeners","listenerCount","emitter","eventNames","Reflect","ownKeys","index","k","pop","arr","copy"],"mappings":"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","sourcesContent":["'use strict';\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexports.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    // force global console to be compiled.\n    // see https://github.com/nodejs/node/issues/4467\n    console;\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    // if (!existing.warned) {\n    //   m = $getMaxListeners(target);\n    //   if (m && m > 0 && existing.length > m) {\n    //     existing.warned = true;\n    //     const w = new Error('Possible EventEmitter memory leak detected. ' +\n    //                         `${existing.length} ${String(type)} listeners ` +\n    //                         'added. Use emitter.setMaxListeners() to ' +\n    //                         'increase limit');\n    //     w.name = 'MaxListenersExceededWarning';\n    //     w.emitter = target;\n    //     w.type = type;\n    //     w.count = existing.length;\n    //     process.emitWarning(w);\n    //   }\n    // }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  const events = this._events;\n\n  if (events) {\n    const evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  const ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n"]},"metadata":{},"sourceType":"script"}