{"ast":null,"code":"var ElementType = require('domelementtype');\n\nvar entities = require('entities');\n\nvar unencodedElements = {\n  __proto__: null,\n  style: true,\n  script: true,\n  xmp: true,\n  iframe: true,\n  noembed: true,\n  noframes: true,\n  plaintext: true,\n  noscript: true\n};\n\nfunction formatAttrs(attributes, opts) {\n  if (!attributes) return;\n  var output = '',\n      value;\n\n  for (var key in attributes) {\n    value = attributes[key];\n\n    if (output) {\n      output += ' ';\n    }\n\n    output += key;\n\n    if (value !== null && value !== '' || opts.xmlMode) {\n      output += '=\"' + (opts.decodeEntities ? entities.encodeXML(value) : value) + '\"';\n    }\n  }\n\n  return output;\n}\n\nvar singleTag = {\n  __proto__: null,\n  area: true,\n  base: true,\n  basefont: true,\n  br: true,\n  col: true,\n  command: true,\n  embed: true,\n  frame: true,\n  hr: true,\n  img: true,\n  input: true,\n  isindex: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true\n};\n\nvar render = module.exports = function (dom, opts) {\n  if (!Array.isArray(dom) && !dom.cheerio) dom = [dom];\n  opts = opts || {};\n  var output = '';\n\n  for (var i = 0; i < dom.length; i++) {\n    var elem = dom[i];\n    if (elem.type === 'root') output += render(elem.children, opts);else if (ElementType.isTag(elem)) output += renderTag(elem, opts);else if (elem.type === ElementType.Directive) output += renderDirective(elem);else if (elem.type === ElementType.Comment) output += renderComment(elem);else if (elem.type === ElementType.CDATA) output += renderCdata(elem);else output += renderText(elem, opts);\n  }\n\n  return output;\n};\n\nfunction renderTag(elem, opts) {\n  if (elem.name === \"svg\") opts = {\n    decodeEntities: opts.decodeEntities,\n    xmlMode: true\n  };\n  var tag = '<' + elem.name,\n      attribs = formatAttrs(elem.attribs, opts);\n\n  if (attribs) {\n    tag += ' ' + attribs;\n  }\n\n  if (opts.xmlMode && (!elem.children || elem.children.length === 0)) {\n    tag += '/>';\n  } else {\n    tag += '>';\n\n    if (elem.children) {\n      tag += render(elem.children, opts);\n    }\n\n    if (!singleTag[elem.name] || opts.xmlMode) {\n      tag += '</' + elem.name + '>';\n    }\n  }\n\n  return tag;\n}\n\nfunction renderDirective(elem) {\n  return '<' + elem.data + '>';\n}\n\nfunction renderText(elem, opts) {\n  var data = elem.data || '';\n\n  if (opts.decodeEntities && !(elem.parent && elem.parent.name in unencodedElements)) {\n    data = entities.encodeXML(data);\n  }\n\n  return data;\n}\n\nfunction renderCdata(elem) {\n  return '<![CDATA[' + elem.children[0].data + ']]>';\n}\n\nfunction renderComment(elem) {\n  return '<!--' + elem.data + '-->';\n}","map":{"version":3,"sources":["/Users/adarsh/Documents/StocksUI/node_modules/react-native-cheerio/node_modules/dom-serializer/index.js"],"names":["ElementType","require","entities","unencodedElements","__proto__","style","script","xmp","iframe","noembed","noframes","plaintext","noscript","formatAttrs","attributes","opts","output","value","key","xmlMode","decodeEntities","encodeXML","singleTag","area","base","basefont","br","col","command","embed","frame","hr","img","input","isindex","keygen","link","meta","param","source","track","wbr","render","module","exports","dom","Array","isArray","cheerio","i","length","elem","type","children","isTag","renderTag","Directive","renderDirective","Comment","renderComment","CDATA","renderCdata","renderText","name","tag","attribs","data","parent"],"mappings":"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","sourcesContent":["/*\n  Module dependencies\n*/\nvar ElementType = require('domelementtype');\nvar entities = require('entities');\n\nvar unencodedElements = {\n  __proto__: null,\n  style: true,\n  script: true,\n  xmp: true,\n  iframe: true,\n  noembed: true,\n  noframes: true,\n  plaintext: true,\n  noscript: true\n};\n\n/*\n  Format attributes\n*/\nfunction formatAttrs(attributes, opts) {\n  if (!attributes) return;\n\n  var output = '',\n      value;\n\n  // Loop through the attributes\n  for (var key in attributes) {\n    value = attributes[key];\n    if (output) {\n      output += ' ';\n    }\n\n    output += key;\n    if ((value !== null && value !== '') || opts.xmlMode) {\n        output += '=\"' + (opts.decodeEntities ? entities.encodeXML(value) : value) + '\"';\n    }\n  }\n\n  return output;\n}\n\n/*\n  Self-enclosing tags (stolen from node-htmlparser)\n*/\nvar singleTag = {\n  __proto__: null,\n  area: true,\n  base: true,\n  basefont: true,\n  br: true,\n  col: true,\n  command: true,\n  embed: true,\n  frame: true,\n  hr: true,\n  img: true,\n  input: true,\n  isindex: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true,\n};\n\n\nvar render = module.exports = function(dom, opts) {\n  if (!Array.isArray(dom) && !dom.cheerio) dom = [dom];\n  opts = opts || {};\n\n  var output = '';\n\n  for(var i = 0; i < dom.length; i++){\n    var elem = dom[i];\n\n    if (elem.type === 'root')\n      output += render(elem.children, opts);\n    else if (ElementType.isTag(elem))\n      output += renderTag(elem, opts);\n    else if (elem.type === ElementType.Directive)\n      output += renderDirective(elem);\n    else if (elem.type === ElementType.Comment)\n      output += renderComment(elem);\n    else if (elem.type === ElementType.CDATA)\n      output += renderCdata(elem);\n    else\n      output += renderText(elem, opts);\n  }\n\n  return output;\n};\n\nfunction renderTag(elem, opts) {\n  // Handle SVG\n  if (elem.name === \"svg\") opts = {decodeEntities: opts.decodeEntities, xmlMode: true};\n\n  var tag = '<' + elem.name,\n      attribs = formatAttrs(elem.attribs, opts);\n\n  if (attribs) {\n    tag += ' ' + attribs;\n  }\n\n  if (\n    opts.xmlMode\n    && (!elem.children || elem.children.length === 0)\n  ) {\n    tag += '/>';\n  } else {\n    tag += '>';\n    if (elem.children) {\n      tag += render(elem.children, opts);\n    }\n\n    if (!singleTag[elem.name] || opts.xmlMode) {\n      tag += '</' + elem.name + '>';\n    }\n  }\n\n  return tag;\n}\n\nfunction renderDirective(elem) {\n  return '<' + elem.data + '>';\n}\n\nfunction renderText(elem, opts) {\n  var data = elem.data || '';\n\n  // if entities weren't decoded, no need to encode them back\n  if (opts.decodeEntities && !(elem.parent && elem.parent.name in unencodedElements)) {\n    data = entities.encodeXML(data);\n  }\n\n  return data;\n}\n\nfunction renderCdata(elem) {\n  return '<![CDATA[' + elem.children[0].data + ']]>';\n}\n\nfunction renderComment(elem) {\n  return '<!--' + elem.data + '-->';\n}\n"]},"metadata":{},"sourceType":"script"}