{"ast":null,"code":"var parse = require(\"../parse\"),\n    $ = require(\"../static\"),\n    updateDOM = parse.update,\n    evaluate = parse.evaluate,\n    utils = require(\"../utils\"),\n    domEach = utils.domEach,\n    cloneDom = utils.cloneDom,\n    isHtml = utils.isHtml,\n    slice = Array.prototype.slice,\n    _ = {\n  flatten: require('lodash/flatten'),\n  bind: require('lodash/bind'),\n  forEach: require('lodash/forEach')\n};\n\nexports._makeDomArray = function makeDomArray(elem, clone) {\n  if (elem == null) {\n    return [];\n  } else if (elem.cheerio) {\n    return clone ? cloneDom(elem.get(), elem.options) : elem.get();\n  } else if (Array.isArray(elem)) {\n    return _.flatten(elem.map(function (el) {\n      return this._makeDomArray(el, clone);\n    }, this));\n  } else if (typeof elem === 'string') {\n    return evaluate(elem, this.options, false);\n  } else {\n    return clone ? cloneDom([elem]) : [elem];\n  }\n};\n\nvar _insert = function _insert(concatenator) {\n  return function () {\n    var elems = slice.call(arguments),\n        lastIdx = this.length - 1;\n    return domEach(this, function (i, el) {\n      var dom, domSrc;\n\n      if (typeof elems[0] === 'function') {\n        domSrc = elems[0].call(el, i, $.html(el.children));\n      } else {\n        domSrc = elems;\n      }\n\n      dom = this._makeDomArray(domSrc, i < lastIdx);\n      concatenator(dom, el.children, el);\n    });\n  };\n};\n\nvar uniqueSplice = function uniqueSplice(array, spliceIdx, spliceCount, newElems, parent) {\n  var spliceArgs = [spliceIdx, spliceCount].concat(newElems),\n      prev = array[spliceIdx - 1] || null,\n      next = array[spliceIdx] || null;\n  var idx, len, prevIdx, node, oldParent;\n\n  for (idx = 0, len = newElems.length; idx < len; ++idx) {\n    node = newElems[idx];\n    oldParent = node.parent || node.root;\n    prevIdx = oldParent && oldParent.children.indexOf(newElems[idx]);\n\n    if (oldParent && prevIdx > -1) {\n      oldParent.children.splice(prevIdx, 1);\n\n      if (parent === oldParent && spliceIdx > prevIdx) {\n        spliceArgs[0]--;\n      }\n    }\n\n    node.root = null;\n    node.parent = parent;\n\n    if (node.prev) {\n      node.prev.next = node.next || null;\n    }\n\n    if (node.next) {\n      node.next.prev = node.prev || null;\n    }\n\n    node.prev = newElems[idx - 1] || prev;\n    node.next = newElems[idx + 1] || next;\n  }\n\n  if (prev) {\n    prev.next = newElems[0];\n  }\n\n  if (next) {\n    next.prev = newElems[newElems.length - 1];\n  }\n\n  return array.splice.apply(array, spliceArgs);\n};\n\nexports.appendTo = function (target) {\n  if (!target.cheerio) {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n\n  target.append(this);\n  return this;\n};\n\nexports.prependTo = function (target) {\n  if (!target.cheerio) {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n\n  target.prepend(this);\n  return this;\n};\n\nexports.append = _insert(function (dom, children, parent) {\n  uniqueSplice(children, children.length, 0, dom, parent);\n});\nexports.prepend = _insert(function (dom, children, parent) {\n  uniqueSplice(children, 0, 0, dom, parent);\n});\n\nexports.wrap = function (wrapper) {\n  var wrapperFn = typeof wrapper === 'function' && wrapper,\n      lastIdx = this.length - 1;\n\n  _.forEach(this, _.bind(function (el, i) {\n    var parent = el.parent || el.root,\n        siblings = parent.children,\n        wrapperDom,\n        elInsertLocation,\n        j,\n        index;\n\n    if (!parent) {\n      return;\n    }\n\n    if (wrapperFn) {\n      wrapper = wrapperFn.call(el, i);\n    }\n\n    if (typeof wrapper === 'string' && !isHtml(wrapper)) {\n      wrapper = this.parents().last().find(wrapper).clone();\n    }\n\n    wrapperDom = this._makeDomArray(wrapper, i < lastIdx).slice(0, 1);\n    elInsertLocation = wrapperDom[0];\n    j = 0;\n\n    while (elInsertLocation && elInsertLocation.children) {\n      if (j >= elInsertLocation.children.length) {\n        break;\n      }\n\n      if (elInsertLocation.children[j].type === 'tag') {\n        elInsertLocation = elInsertLocation.children[j];\n        j = 0;\n      } else {\n        j++;\n      }\n    }\n\n    index = siblings.indexOf(el);\n    updateDOM([el], elInsertLocation);\n    uniqueSplice(siblings, index, 0, wrapperDom, parent);\n  }, this));\n\n  return this;\n};\n\nexports.after = function () {\n  var elems = slice.call(arguments),\n      lastIdx = this.length - 1;\n  domEach(this, function (i, el) {\n    var parent = el.parent || el.root;\n\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el),\n        domSrc,\n        dom;\n    if (index < 0) return;\n\n    if (typeof elems[0] === 'function') {\n      domSrc = elems[0].call(el, i, $.html(el.children));\n    } else {\n      domSrc = elems;\n    }\n\n    dom = this._makeDomArray(domSrc, i < lastIdx);\n    uniqueSplice(siblings, index + 1, 0, dom, parent);\n  });\n  return this;\n};\n\nexports.insertAfter = function (target) {\n  var clones = [],\n      self = this;\n\n  if (typeof target === 'string') {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n\n  target = this._makeDomArray(target);\n  self.remove();\n  domEach(target, function (i, el) {\n    var clonedSelf = self._makeDomArray(self.clone());\n\n    var parent = el.parent || el.root;\n\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el);\n    if (index < 0) return;\n    uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n    clones.push(clonedSelf);\n  });\n  return this.constructor.call(this.constructor, this._makeDomArray(clones));\n};\n\nexports.before = function () {\n  var elems = slice.call(arguments),\n      lastIdx = this.length - 1;\n  domEach(this, function (i, el) {\n    var parent = el.parent || el.root;\n\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el),\n        domSrc,\n        dom;\n    if (index < 0) return;\n\n    if (typeof elems[0] === 'function') {\n      domSrc = elems[0].call(el, i, $.html(el.children));\n    } else {\n      domSrc = elems;\n    }\n\n    dom = this._makeDomArray(domSrc, i < lastIdx);\n    uniqueSplice(siblings, index, 0, dom, parent);\n  });\n  return this;\n};\n\nexports.insertBefore = function (target) {\n  var clones = [],\n      self = this;\n\n  if (typeof target === 'string') {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n\n  target = this._makeDomArray(target);\n  self.remove();\n  domEach(target, function (i, el) {\n    var clonedSelf = self._makeDomArray(self.clone());\n\n    var parent = el.parent || el.root;\n\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el);\n    if (index < 0) return;\n    uniqueSplice(siblings, index, 0, clonedSelf, parent);\n    clones.push(clonedSelf);\n  });\n  return this.constructor.call(this.constructor, this._makeDomArray(clones));\n};\n\nexports.remove = function (selector) {\n  var elems = this;\n  if (selector) elems = elems.filter(selector);\n  domEach(elems, function (i, el) {\n    var parent = el.parent || el.root;\n\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el);\n    if (index < 0) return;\n    siblings.splice(index, 1);\n\n    if (el.prev) {\n      el.prev.next = el.next;\n    }\n\n    if (el.next) {\n      el.next.prev = el.prev;\n    }\n\n    el.prev = el.next = el.parent = el.root = null;\n  });\n  return this;\n};\n\nexports.replaceWith = function (content) {\n  var self = this;\n  domEach(this, function (i, el) {\n    var parent = el.parent || el.root;\n\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        dom = self._makeDomArray(typeof content === 'function' ? content.call(el, i, el) : content),\n        index;\n\n    updateDOM(dom, null);\n    index = siblings.indexOf(el);\n    uniqueSplice(siblings, index, 1, dom, parent);\n    el.parent = el.prev = el.next = el.root = null;\n  });\n  return this;\n};\n\nexports.empty = function () {\n  domEach(this, function (i, el) {\n    _.forEach(el.children, function (child) {\n      child.next = child.prev = child.parent = null;\n    });\n\n    el.children.length = 0;\n  });\n  return this;\n};\n\nexports.html = function (str) {\n  if (str === undefined) {\n    if (!this[0] || !this[0].children) return null;\n    return $.html(this[0].children, this.options);\n  }\n\n  var opts = this.options;\n  domEach(this, function (i, el) {\n    _.forEach(el.children, function (child) {\n      child.next = child.prev = child.parent = null;\n    });\n\n    var content = str.cheerio ? str.clone().get() : evaluate('' + str, opts, false);\n    updateDOM(content, el);\n  });\n  return this;\n};\n\nexports.toString = function () {\n  return $.html(this, this.options);\n};\n\nexports.text = function (str) {\n  if (str === undefined) {\n    return $.text(this);\n  } else if (typeof str === 'function') {\n    return domEach(this, function (i, el) {\n      var $el = [el];\n      return exports.text.call($el, str.call(el, i, $.text($el)));\n    });\n  }\n\n  domEach(this, function (i, el) {\n    _.forEach(el.children, function (child) {\n      child.next = child.prev = child.parent = null;\n    });\n\n    var elem = {\n      data: '' + str,\n      type: 'text',\n      parent: el,\n      prev: null,\n      next: null,\n      children: []\n    };\n    updateDOM(elem, el);\n  });\n  return this;\n};\n\nexports.clone = function () {\n  return this._make(cloneDom(this.get(), this.options));\n};","map":{"version":3,"sources":["/Users/adarsh/Documents/StocksUI/node_modules/react-native-cheerio/lib/api/manipulation.js"],"names":["parse","require","$","updateDOM","update","evaluate","utils","domEach","cloneDom","isHtml","slice","Array","prototype","_","flatten","bind","forEach","exports","_makeDomArray","makeDomArray","elem","clone","cheerio","get","options","isArray","map","el","_insert","concatenator","elems","call","arguments","lastIdx","length","i","dom","domSrc","html","children","uniqueSplice","array","spliceIdx","spliceCount","newElems","parent","spliceArgs","concat","prev","next","idx","len","prevIdx","node","oldParent","root","indexOf","splice","apply","appendTo","target","constructor","_originalRoot","append","prependTo","prepend","wrap","wrapper","wrapperFn","siblings","wrapperDom","elInsertLocation","j","index","parents","last","find","type","after","insertAfter","clones","self","remove","clonedSelf","push","before","insertBefore","selector","filter","replaceWith","content","empty","child","str","undefined","opts","toString","text","$el","data","_make"],"mappings":"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","sourcesContent":["var parse = require('../parse'),\n    $ = require('../static'),\n    updateDOM = parse.update,\n    evaluate = parse.evaluate,\n    utils = require('../utils'),\n    domEach = utils.domEach,\n    cloneDom = utils.cloneDom,\n    isHtml = utils.isHtml,\n    slice = Array.prototype.slice,\n    _ = {\n      flatten: require('lodash/flatten'),\n      bind: require('lodash/bind'),\n      forEach: require('lodash/forEach')\n    };\n\n// Create an array of nodes, recursing into arrays and parsing strings if\n// necessary\nexports._makeDomArray = function makeDomArray(elem, clone) {\n  if (elem == null) {\n    return [];\n  } else if (elem.cheerio) {\n    return clone ? cloneDom(elem.get(), elem.options) : elem.get();\n  } else if (Array.isArray(elem)) {\n    return _.flatten(elem.map(function(el) {\n      return this._makeDomArray(el, clone);\n    }, this));\n  } else if (typeof elem === 'string') {\n    return evaluate(elem, this.options, false);\n  } else {\n    return clone ? cloneDom([elem]) : [elem];\n  }\n};\n\nvar _insert = function(concatenator) {\n  return function() {\n    var elems = slice.call(arguments),\n        lastIdx = this.length - 1;\n\n    return domEach(this, function(i, el) {\n      var dom, domSrc;\n\n      if (typeof elems[0] === 'function') {\n        domSrc = elems[0].call(el, i, $.html(el.children));\n      } else {\n        domSrc = elems;\n      }\n\n      dom = this._makeDomArray(domSrc, i < lastIdx);\n      concatenator(dom, el.children, el);\n    });\n  };\n};\n\n/*\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @param {Array} array Target array to splice.\n * @param {Number} spliceIdx Index at which to begin changing the array.\n * @param {Number} spliceCount Number of elements to remove from the array.\n * @param {Array} newElems Elements to insert into the array.\n *\n * @api private\n */\nvar uniqueSplice = function(array, spliceIdx, spliceCount, newElems, parent) {\n  var spliceArgs = [spliceIdx, spliceCount].concat(newElems),\n      prev = array[spliceIdx - 1] || null,\n      next = array[spliceIdx] || null;\n  var idx, len, prevIdx, node, oldParent;\n\n  // Before splicing in new elements, ensure they do not already appear in the\n  // current array.\n  for (idx = 0, len = newElems.length; idx < len; ++idx) {\n    node = newElems[idx];\n    oldParent = node.parent || node.root;\n    prevIdx = oldParent && oldParent.children.indexOf(newElems[idx]);\n\n    if (oldParent && prevIdx > -1) {\n      oldParent.children.splice(prevIdx, 1);\n      if (parent === oldParent && spliceIdx > prevIdx) {\n        spliceArgs[0]--;\n      }\n    }\n\n    node.root = null;\n    node.parent = parent;\n\n    if (node.prev) {\n      node.prev.next = node.next || null;\n    }\n\n    if (node.next) {\n      node.next.prev = node.prev || null;\n    }\n\n    node.prev = newElems[idx - 1] || prev;\n    node.next = newElems[idx + 1] || next;\n  }\n\n  if (prev) {\n    prev.next = newElems[0];\n  }\n  if (next) {\n    next.prev = newElems[newElems.length - 1];\n  }\n  return array.splice.apply(array, spliceArgs);\n};\n\nexports.appendTo = function(target) {\n  if (!target.cheerio) {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n\n  target.append(this);\n\n  return this;\n};\n\nexports.prependTo = function(target) {\n  if (!target.cheerio) {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n\n  target.prepend(this);\n\n  return this;\n};\n\nexports.append = _insert(function(dom, children, parent) {\n  uniqueSplice(children, children.length, 0, dom, parent);\n});\n\nexports.prepend = _insert(function(dom, children, parent) {\n  uniqueSplice(children, 0, 0, dom, parent);\n});\n\nexports.wrap = function(wrapper) {\n  var wrapperFn = typeof wrapper === 'function' && wrapper,\n      lastIdx = this.length - 1;\n\n  _.forEach(this, _.bind(function(el, i) {\n    var parent = el.parent || el.root,\n        siblings = parent.children,\n        wrapperDom, elInsertLocation, j, index;\n\n    if (!parent) {\n      return;\n    }\n\n    if (wrapperFn) {\n      wrapper = wrapperFn.call(el, i);\n    }\n\n    if (typeof wrapper === 'string' && !isHtml(wrapper)) {\n      wrapper = this.parents().last().find(wrapper).clone();\n    }\n\n    wrapperDom = this._makeDomArray(wrapper, i < lastIdx).slice(0, 1);\n    elInsertLocation = wrapperDom[0];\n    // Find the deepest child. Only consider the first tag child of each node\n    // (ignore text); stop if no children are found.\n    j = 0;\n\n    while (elInsertLocation && elInsertLocation.children) {\n      if (j >= elInsertLocation.children.length) {\n        break;\n      }\n\n      if (elInsertLocation.children[j].type === 'tag') {\n        elInsertLocation = elInsertLocation.children[j];\n        j=0;\n      } else {\n        j++;\n      }\n    }\n    index = siblings.indexOf(el);\n\n    updateDOM([el], elInsertLocation);\n    // The previous operation removed the current element from the `siblings`\n    // array, so the `dom` array can be inserted without removing any\n    // additional elements.\n    uniqueSplice(siblings, index, 0, wrapperDom, parent);\n  }, this));\n\n  return this;\n};\n\nexports.after = function() {\n  var elems = slice.call(arguments),\n      lastIdx = this.length - 1;\n\n  domEach(this, function(i, el) {\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el),\n        domSrc, dom;\n\n    // If not found, move on\n    if (index < 0) return;\n\n    if (typeof elems[0] === 'function') {\n      domSrc = elems[0].call(el, i, $.html(el.children));\n    } else {\n      domSrc = elems;\n    }\n    dom = this._makeDomArray(domSrc, i < lastIdx);\n\n    // Add element after `this` element\n    uniqueSplice(siblings, index + 1, 0, dom, parent);\n  });\n\n  return this;\n};\n\nexports.insertAfter = function(target) {\n  var clones = [],\n      self = this;\n  if (typeof target === 'string') {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n  target = this._makeDomArray(target);\n  self.remove();\n  domEach(target, function(i, el) {\n    var clonedSelf = self._makeDomArray(self.clone());\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el);\n\n    // If not found, move on\n    if (index < 0) return;\n\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n    clones.push(clonedSelf);\n  });\n  return this.constructor.call(this.constructor, this._makeDomArray(clones));\n};\n\nexports.before = function() {\n  var elems = slice.call(arguments),\n      lastIdx = this.length - 1;\n\n  domEach(this, function(i, el) {\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el),\n        domSrc, dom;\n\n    // If not found, move on\n    if (index < 0) return;\n\n    if (typeof elems[0] === 'function') {\n      domSrc = elems[0].call(el, i, $.html(el.children));\n    } else {\n      domSrc = elems;\n    }\n\n    dom = this._makeDomArray(domSrc, i < lastIdx);\n\n    // Add element before `el` element\n    uniqueSplice(siblings, index, 0, dom, parent);\n  });\n\n  return this;\n};\n\nexports.insertBefore = function(target) {\n  var clones = [],\n      self = this;\n  if (typeof target === 'string') {\n    target = this.constructor.call(this.constructor, target, null, this._originalRoot);\n  }\n  target = this._makeDomArray(target);\n  self.remove();\n  domEach(target, function(i, el) {\n    var clonedSelf = self._makeDomArray(self.clone());\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el);\n\n    // If not found, move on\n    if (index < 0) return;\n\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index, 0, clonedSelf, parent);\n    clones.push(clonedSelf);\n  });\n  return this.constructor.call(this.constructor, this._makeDomArray(clones));\n};\n\n/*\n  remove([selector])\n*/\nexports.remove = function(selector) {\n  var elems = this;\n\n  // Filter if we have selector\n  if (selector)\n    elems = elems.filter(selector);\n\n  domEach(elems, function(i, el) {\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        index = siblings.indexOf(el);\n\n    if (index < 0) return;\n\n    siblings.splice(index, 1);\n    if (el.prev) {\n      el.prev.next = el.next;\n    }\n    if (el.next) {\n      el.next.prev = el.prev;\n    }\n    el.prev = el.next = el.parent = el.root = null;\n  });\n\n  return this;\n};\n\nexports.replaceWith = function(content) {\n  var self = this;\n\n  domEach(this, function(i, el) {\n    var parent = el.parent || el.root;\n    if (!parent) {\n      return;\n    }\n\n    var siblings = parent.children,\n        dom = self._makeDomArray(typeof content === 'function' ? content.call(el, i, el) : content),\n        index;\n\n    // In the case that `dom` contains nodes that already exist in other\n    // structures, ensure those nodes are properly removed.\n    updateDOM(dom, null);\n\n    index = siblings.indexOf(el);\n\n    // Completely remove old element\n    uniqueSplice(siblings, index, 1, dom, parent);\n    el.parent = el.prev = el.next = el.root = null;\n  });\n\n  return this;\n};\n\nexports.empty = function() {\n  domEach(this, function(i, el) {\n    _.forEach(el.children, function(child) {\n      child.next = child.prev = child.parent = null;\n    });\n\n    el.children.length = 0;\n  });\n  return this;\n};\n\n/**\n * Set/Get the HTML\n */\nexports.html = function(str) {\n  if (str === undefined) {\n    if (!this[0] || !this[0].children) return null;\n    return $.html(this[0].children, this.options);\n  }\n\n  var opts = this.options;\n\n  domEach(this, function(i, el) {\n    _.forEach(el.children, function(child) {\n      child.next = child.prev = child.parent = null;\n    });\n\n    var content = str.cheerio ? str.clone().get() : evaluate('' + str, opts, false);\n\n    updateDOM(content, el);\n  });\n\n  return this;\n};\n\nexports.toString = function() {\n  return $.html(this, this.options);\n};\n\nexports.text = function(str) {\n  // If `str` is undefined, act as a \"getter\"\n  if (str === undefined) {\n    return $.text(this);\n  } else if (typeof str === 'function') {\n    // Function support\n    return domEach(this, function(i, el) {\n      var $el = [el];\n      return exports.text.call($el, str.call(el, i, $.text($el)));\n    });\n  }\n\n  // Append text node to each selected elements\n  domEach(this, function(i, el) {\n    _.forEach(el.children, function(child) {\n      child.next = child.prev = child.parent = null;\n    });\n\n    var elem = {\n      data: '' + str,\n      type: 'text',\n      parent: el,\n      prev: null,\n      next: null,\n      children: []\n    };\n\n    updateDOM(elem, el);\n  });\n\n  return this;\n};\n\nexports.clone = function() {\n  return this._make(cloneDom(this.get(), this.options));\n};\n"]},"metadata":{},"sourceType":"script"}